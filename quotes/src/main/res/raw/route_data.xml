<?xml version="1.0" encoding="UTF-8"?>
<permission>
  <per>READ_CALENDAR: "android.permission.READ_CALENDAR"</per>
  <per>WRITE_CALENDAR: "android.permission.WRITE_CALENDAR"</per>
  <per>CAMERA: "android.permission.CAMERA</per>
  <per>READ_CONTACTS: "android.permission.READ_CONTACTS"</per>
  <per>WRITE_CONTACTS: "android.permission.WRITE_CONTACTS"</per>
  <per>GET_ACCOUNTS: "android.permission.GET_ACCOUNTS"</per>
  <per>WRITE_EXTERNAL_STORAGE: "android.permission.WRITE_EXTERNAL_STORAGE"</per>
  <per>READ_EXTERNAL_STORAGE: "android.permission.READ_EXTERNAL_STORAGE"</per>
  <per>RECEIVE_MMS: "android.permission.RECEIVE_MMS"</per>
  <per>RECEIVE_WAP_PUSH: "android.permission.RECEIVE_WAP_PUSH"</per>
  <per>READ_SMS: "android.permission.READ_SMS"</per>
  <per>RECEIVE_SMS: "android.permission.RECEIVE_SMS"</per>
  <per>SEND_SMS: "android.permission.SEND_SMS"</per>
  <per>BODY_SENSORS: "android.permission.BODY_SENSORS"</per>
  <per>PROCESS_OUTGOING_CALLS: "android.permission.PROCESS_OUTGOING_CALLS"</per>
  <per>USE_SIP: "android.permission.USE_SIP"</per>
  <per>ADD_VOICEMAIL: "com.android.voicemail.permission.ADD_VOICEMAIL"</per>
  <per>WRITE_CALL_LOG: "android.permission.WRITE_CALL_LOG"</per>
  <per>READ_CALL_LOG: "android.permission.READ_CALL_LOG"</per>
  <per>CALL_PHONE: "android.permission.CALL_PHONE"</per>
  <per>READ_PHONE_STATE: "android.permission.READ_PHONE_STATE"</per>
  <per>RECORD_AUDIO: "android.permission.RECORD_AUDIO"</per>
  <per>ACCESS_COARSE_LOCATION: "android.permission.ACCESS_COARSE_LOCATION"</per>
  <per>ACCESS_FINE_LOCATION: "android.permission.ACCESS_FINE_LOCATION"</per>
  </permission>

<apidata>
  <data>A.BASE_URL = "https://hubli.lit-transit.com/tms/rest/api/v1/siri/"</data>
  <data>A.AUTHORIZATION = "Authorization"</data>
  <data>A.APIKEY = "ApiKey bf26959f0b704b1cafb7e0b42e1ae0ec"</data>
  <data>A.BASE_URL_POST = "https://www.hdbrts.com:8082/"</data>
  <data>A.CONTENT_TYPE = "Content-Type"</data>
  <data>A.CONTENT_TYPE_KEY = "application/x-www-form-urlencoded"</data>
  <data>A.CONTENT_TYPE_JSON = "application/json"</data>
  <data>A.APIKEY_POST = "null"</data>
  <data>A.GENERATE_OTP_URL = "api/AppUser/GenerateOTP?mobileNumber="</data>
  <data>A.TIME_TABLE_API_PATH_ROUTE = "api/RouteTimeTable/"</data>
  <data>A.TIME_TABLE_API_PATH_BUS_ON_ROUTE = "api/BusesOnRoute/"</data>
  <data>A.TIME_TABLE_API_STOPS_ON_ROUTE = "api/StopsOnRoute/"</data>
  <data>A.PLACES_OF_ARRRACTIONS = "api/PlacesOfAttraction"</data>
  <data>A.FEEDBACK_API = "api/Feedback/AddFeedback"</data>
  <data>A.STOPE_CODE = "&amp;stopcode="</data>

  <data>A.SIRI_SM = "api/AVLS/sm?routecode=&amp;start_datetime=&amp;end_datetime=&amp;stopname="</data>
  <data>A.ETA_STOP_API_WITH_LOCATION = "api/StopPosition"</data>
  <data>A.ETA_STOP_API = "api/StopsOnRoute?stopName="</data>
  <data>A.SCHEDULE_FOR_ROUTE_CODE = "&amp;scheduleForRouteCode="</data>
  <data>A.PAGE = "&amp;Page="</data>
  <data>A.ROUTE_CODE = "&amp;routeCode="</data>
  <data>A.ROWS = "?Rows="</data>
  <data>A.ROUTE_STRINGELSE = "&amp;Rows=25&amp;Page=0"</data>
  <data>A.DETACH_CARD_API_PATH = "api/AFCS/DeregisterEndUser"</data>
  <data>A.ATTACH_CARD_API_PATH = "api/AFCS/RegisterCard"</data>

  <data>A.ADD_TOP_UP_API_PATH = "api/AFCS/DoTopUp"</data>
  <data>A.TRANSACTION_HISTORY_API_PATH = "api/AppUser/GetTopUpTransactions"</data>
  <data>A.ROUTE_DIAGRAM_STOPS_ON_ROUTE_API_PATH = "api/FareMatrix/StopsOnRoute?RouteCode="</data>
  <data>A.ROUTE_DIAGRAM_API_PATH = "api/Planning/RouteFlowDiagram"</data>
  <data>A.ROUTE_STRING = "/api/StopsOnRoute?routeName="</data>

  <data>A.REGISTER_USER_SUCESS = "register_user_sucess"</data>
  <data>A.LOGIN_USER_FAIL = "LOGIN_USER_FAIL"</data>
  <data>A.LOGIN_USER_SUCESS = "login_user_sucess"</data>
  <data>A.USER_ID_CHANGE = "user_id_change"</data>
  <data>A.PASSWORD_CHANGE = "password_change"</data>
  <data>A.LOGIN_USING_OTP = "login_Using_OTP"</data>
  <data>A.GENERATE_OTP = "generate_OTP"</data>
  <data>A.EMAIL_CHANGE = "email_change"</data>
  <data>A.JOURNEY_PLANNER = "api/Planning/GetBusJourneyPlan"</data>

  <data>A.NEW_PASSWORD = "new_password"</data>
  <data>A.EXISTING_PASSWORD = "existing_password"</data>
  <data>A.VALIDATE_EMAIL_ID = "validate_email_id"</data>
  <data>A.VALIDATE_MOBILE_NUMBER = "validate_mobile_number"</data>
  <data>A.FETCHING_DATA_SUCESS = "fetching_Data_sucess"</data>
  <data>A.FETCHING_DATAETD = "fetching_Data_etd"</data>
  <data>A.FETCHING_DATA = "fetching_Data"</data>
  <data>A.GETTING_MONITORED_STOP_VISIT_RESPONSE = "monitoredStopVisit"</data>
  <data>A.GETTING_JSON_RESPONSE = "json_resp"</data>


  <data>A.TIME_TABLE_ROUTE_LIST = "time_table_route_list"</data>
  <data>A.PLACES_OF_ATTRACTION = "places_of_attraction"</data>
  <data>A.CONTACT_DETAILS = "contact_name_details"</data>
  <data>A.ETA_STOP_LIST_FOR_MAP = "eta_stop_list_for_map"</data>
  <data>A.ETA_ERROR = "eta_error"</data>
  <data>A.ETA_FETCHDATA_SUCESS = "eta_fetch_data_sucess"</data>
  <data>A.ETA_ALL_STOP = "eta_all_stop"</data>
  <data>A.ETA_BUS_DETAILS = "eta_bus_details"</data>
  <data>A.ETA_STOP_DETAILS = "eta_stop_details"</data>


  <data>A.ETA_GETROUTE_DETAILS = "eta_route_details"</data>
  <data>A.ORIGIN_REF = "origin_ref"</data>
  <data>A.FETCHING_DATA_PLN = "fetching_Data_pln"</data>
  <data>A.FETCHING_DATAETA = "fetching_Data_Eta"</data>
  <data>A.REGISTER_FETCHING_DATA_SUCESS = "regiater_fetching_data_sucess"</data>
  <data>A.REGISTER_FETCHING_DATA = "regiater_fetching_data"</data>
  <data>A.PLAN_ERROR = "plan_error"</data>
  <data>A.PLAN_FETCHING_DATA_SUCESS = "plan_fetching_data_sucess"</data>
  <data>A.PLAN_FETCHING_DATA = "plan_fetching_data"</data>

  <data>A.ETD_ALL_STOP = "etd_all_stop"</data>
  <data>A.ETD_BUS_DETAILS = "etd_bus_details"</data>
  <data>A.ETD_STOP_DETAILS = "etd_stop_details"</data>
  <data>A.ETD_GETROUTE_DETAILS = "etd_route_details"</data>
  <data>A.NO_RESULT_FOUND = "no_result_found"</data>
  <data>A.UPDATES = "updates"</data>
  <data>A.PA_SEARCH_ERROR = "pa_search_error"</data>
  <data>A.PA_SEARCH_SUCESS = "pa_search_sucess"</data>
  <data>A.PA_SEARCH = "pa_search"</data>
  <data>A.SEARCH_LOADING = "search_loading"</data>
  <data>A.SEARCH_ROUTE_LIST_ETA = "search_route_list_eta"</data>
  <data>A.FARECHART_SEARCH_ROUTE_LIST = "fareChart_search_route_list"</data>
  <data>A.SEARCH_ROUTE_LIST = "search_route_list"</data>
  <data>A.DASHBOARD_TOKEN = "dashboard_token"</data>
  <data>A.TIME_TABLE_ERROR = "time_table_error"</data>
  <data>A.TIME_TABLE_STOP_LIST = "time_stop_list"</data>
  <data>A.TIME_TABLE_BUS_LIST = "time_table_bus_list</data>
  <data>A.PROFILE = "profile"</data>
  <data>A.GRIEVANCES = "grivances"</data>
  <data>A.ON_COMMENT_CHANGE = "on_comment_change"</data>
  <data>A.ON_EMAIL_CHANGE = "on_email_change"</data>
  <data>A.ON_PHONE_CHANGE = "on_phone_change"</data>
  <data>A.ON_FULL_NAME_CHANGE = "full_name_change"</data>
  <data>A.FEEDBACK_ERROR = "feedback_error"</data>
  <data>A.FEEDBACK_FETCHING_SUCESS = "feedback_fetching_sucess"</data>
  <data>A.FEEDBACK_FETCHING_DATA = "feedback_fetching_data"</data>
  <data>A.FEEDBACK_SUBMIT_RESPONSE = "feedback_submeer_response"</data>
  <data>A.GET_PLAN_STOPLIST = "get_plan_stoplist"</data>
  <data>A.GET_PLAN_ROUTEDETAIL_LIST = "get_plan_routedetail_list"</data>
  <data>A.ETD_ERROR = "etd_error"</data>
  <data>A.ETD_FETCHDATA_SUCESS = "etd_fetch_data_sucess"</data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data></data>
  <data>A.USER_EMAIL_CHECK = "user_Email_check"</data>
  <data>A.USER_NAME_CHECK = "user_name_check"</data>
  <data>A.USER_NAME_REDUCER = "user_name_reducer"</data>
  <data>A.USER_DETAILS = "user_details"</data>
  <data>A.RECHARGE = "recharge"</data>
</apidata>

  <data>A.USER_IMAGE_CHECK = "user_image_check"</data>
  <data> A.GRIEVANCE_SUBMIT_RESPONSE = "grievance_Submit_Response"</data>
  <data> A.FETCHING_GRIVANCE_DATA = "grievance_Submit_DATA"</data>
  <data> A.FETCHING_GRIVANCE_DATA_SUCESS = "grievance_Submit_DATA_SUCESS"</data>
  <data> A.GRIVANCE_DATA_ERROR = "grievance__data_error"</data>
  <data> A.FETCHING_USER_DETAILS = "grievanceuser_details"</data>
  <data> A.GRIEVANCES_API = "api/Grievance"</data>
  <data> A.GETGRIEVANCES_API = "api/Grievance?Userid=&amp;Page=0&amp;Rows=4"</data>
  <data> A.SUBMITGRIEVANCES_API = "api/Grievance?Page=0&amp;Rows=4"</data>
  <data> A.GET_GRIEVANCE_DETAILS = "get_Grievance_Details"</data>
  <data> A.SET_IS_CONNECTED = "set_is_connected"</data>
  <data> A.GET_FARECHART_LIST = "get_fareChart_list"</data>
  <data> A.GET_FARE = "get_fareCist"</data>
  <data> A.FILTERED_LIST = "filter_list"</data>
  <data> A.FARECHART_STOPS_API = "api/FareMatrix/Stops"</data>
  <data> A.FARECHART_STOPS_ON_ROUTE_API = "api/FareMatrix/StopsOnRoute?RouteCode="</data>
  <data> A.FARECHART_STOPS = "farechart_stops"</data>
  <data> A.FARECHART_ROUTE_SET = "farechart_route_set"</data>
  <data> A.FARECHART_STOP1_SET = "farechart_stop1_set"</data>
  <data> A.FARECHART_STOP2_SET = "farechart_stop2_set"</data>
  <data> A.FARECHART_STOP_ONE_OBJECT = "farechart_stop_one_object"</data>
  <data> A.FARECHART_STOP_TWO_OBJECT = "farechart_stop_two_object"</data>
  <data> A.GET_FARE_AMOUNT = "api/FareMatrix/Fare?From="</data>
  <data> A.REGISTER_CARD = "api/AFCS/RegisterCard"</data>
  <data> A.GETUSER_DTAILS_API = "api/AppUser/GetUser"</data>
  <data> A.REGISTER_USER_DTAILS_API = "api/AppUser/AddUser"</data>
  <data> A.UPDATE_USER_DTAILS_API = "api/AppUser/UpdateUser"</data>
  <data> A.GET_MY_CARDS = "api/AppUser/GetMyCards"</data>
  <data> A.VALIDATE_MOBILE = "api/Validation/CheckMobile?Mobile="</data>
  <data> A.VALIDATE_EMAIL = "api/Validation/CheckEmail?Email="</data>
  <data> A.RESET_PASSWORD = "/api/AppUser/ResetPassword"</data>
  <data> A.FORGOT_PASSWORD_API = "/api/AppUser/ForgotPassword"</data>
  <data> A.FORGOT_PASSWORD_EMAIL_CHANGE = "forgot_password_email_change"</data>
  <data> A.FORGOT_PASSWORD_MOBILE_NUMBER_CHANGE = "forgot_password_phone_number_change"</data>
  <data> A.FARECHAT_GET_STOP = "api/Farematrix/Stops"</data>
  <data> A.FARECHAT_GET_FARE = "api/Farematrix/Fare"</data>
  <data> A.STOP_FEV_LIST = "api/Favorite"</data>
  <data> A.FARECHAT_FROM = "?From="</data><data> A.FARECHAT_TO = "&amp;To="</data>
  <data> A.FARECHAT_FETCH = "fare_chart_fetch"</data>
  <data> A.FARECHAT_FETCH_SUCESS = "fare_chart_fetch_sucess"</data>
  <data> A.FARECHAT_ERROR = "fare_chat_error"</data>
  <data> A.USER_DETAILS_SUBMIT_RESPONSE = "user_details_submit_response"</data>
  <data> A.USER_DETAILS_FETCHING_DATA = "user_details_fetching_data"</data>
  <data> A.USER_DETAILS_FETCHING_SUCESS = "user_details_fetching_success"</data>
  <data> A.USER_DETAILS_ERROR = "user_details_error"</data>
  <data> A.ON_USER_DETAILS_FIRST_NAME_CHANGE = "on_user_details_first_name_change"</data>
  <data> A.ON_USER_DETAILS_LAST_NAME_CHANGE = "on_user_details_last_name_change"</data>
  <data> A.ON_USER_DETAILS_EMAIL_CHANGE = "on_user_details_email_change"</data>
  <data> A.ON_USER_DETAILS_PHONE_CHANGE = "on_user_details_phone_change"</data>
  <data> A.ON_USER_DETAILS_ADDRESS_CHANGE = "on_user_details_address_change"</data>
  <data> A.ON_USER_DETAILS_PHOTO_CHANGE = "on_user_details_photo_change"</data>
  <data> A.ON_USER_PASSWORD_CHANGE = "Oon_user_password_change"</data>
  <data> A.ON_USER_RE_ENTER_PASSWORD_CHANGE = "Oon_user_re_password_change"</data>
  <data> A.ON_USER_PROFILE_CHANGE = "on_user_profile_change"</data>
  <data> A.LINE_STRING = "line_string"</data>
  <data> A.ANIMATION_TYPE = "bounceInRight"</data>
  <data> A.USER_DETAILS_ITEM = "user_details_item"</data>
  <data> A.GET_FEV_LIST = "fev_lists"</data>
  <data> A.DEMO_TABLE = "ListTable"</data>
  <data> A.TOKEN_TABLE = "tokeTable"</data>
  <data> A.NAME_CHANGE = "name_change"</data>
  <data> A.CONTACT_ONE_CHANGE = "contact_one_change"</data>
  <data> A.CONTACT_TWO_CHANGE = "contact_two_change"</data>
  <data> A.SOS_DETAILS_FETCHING_DATA = "sos_details_fetching_data"</data>
  <data> A.SOS_DETAILS_FETCHING_SUCESS = "sos_details_fetching_success"</data>
  <data> A.ROUTE_DIAGRAM_ROUTE_LIST = "route_diagram_route_list"</data>
  <data> A.ROUTE_DIAGRAM_LOADER = "route_diagram_loader"</data>
  <data> A.ROUTE_DIAGRAM_MAP_LOADER = "route_diagram_map_loader"</data>
  <data> A.ROUTE_DIAGRAM_STOPS_ON_ROUTE_LIST = "route_diagram_stops_on_route_list"</data>
  <data> A.ROUTE_DIAGRAM_STOPS_ON_ROUTE_POSITION = "route_diagram_stops_on_route_position"</data>
  <data> A.TRANSACTION_HISTORY_LOADER = "transaction_history_loader"</data>
  <data> A.TRANSACTION_HISTORY_LIST = "transaction_history_list"</data>
  <data> A.TRANSACTION_HISTORY_LIST_FOOTER_LOADER = "transaction_history_list_footer_loader"</data>
  <data> A.ADD_TOPUP_LOADER = "add_topup_loader"</data>
  <data> A.ADD_TOPUP__FORM_RESPONSE = "add_topup_form_response"</data>
  <data> A.params = {
        grant_type: "password", username: "MApiUser"
        password: "tttttt"

</data>
<data>eatStopListForMap: [] ,
errorIs: !1,loadingEta: !1,routeDetails: [],stpDetailsList: [],busDetailsList: [],stopList: [],lineString: [], searchRouteList: [],nearestStpDetailsList: []</data>

            <data>
            case s.ETA_GETROUTE_DETAILS:
                    routeDetails: r.payload,
                    loadingEta: !1
            case s.FETCHING_DATAETA:
                    loadingEta: !0
                    errorIs: !1
               case s.ETA_STOP_DETAILS:
                   nearestStpDetailsList: r.payload
                    loadingEta:!1
            case s.ETA_BUS_DETAILS:
                    busDetailsList: r.payload
                    loadingEta: !1
            case s.ETA_ALL_STOP:
                    stopList: r.payload
                    loadingEta: !1
            case s.ETA_FETCHDATA_SUCESS:
                    loadingEta: !1
            case s.ETA_ERROR:
                    loadingEta: !1
            case s.ETA_STOP_LIST_FOR_MAP:
                eatStopListForMap: r.payload
                    loadingEta: !1
                case s.FETCHING_DATA_SUCESS:
            case s.LINE_STRING:
                    lineString: r.payload
                case s.SEARCH_ROUTE_LIST_ETA:
                    searchRouteList: r.payload</data>

        d = {
            etdStopListForMap: []</data><data>
            errorEtdIs: !1</data><data>
            loading: !1</data><data>
            routeDetails: []</data><data>
            stpDetailsList: []</data><data>
            busDetailsList: []</data><data>
            stopList: []

            case a.ETD_GETROUTE_DETAILS:
                return babelHelpers.extends({}</data><data> e</data><data> {
                    routeDetails: t.payload</data><data>
                    loadingEtd: !1</data><data>
                    errorEtdIs: !1
                });
            case a.FETCHING_DATAETD:
                return babelHelpers.extends({}</data><data> e</data><data> {
                    loadingEtd: !0</data><data>
                    errorEtdIs: !1
                });
            case a.ETD_STOP_DETAILS:
                return babelHelpers.extends({}</data><data> e</data><data> {
                    stpDetailsList: t.payload</data><data>
                    loadingEtd: !1</data><data>
                    errorEtdIs: !1
                });
            case a.ETD_BUS_DETAILS:
                return babelHelpers.extends({}</data><data> e</data><data> {
                    busDetailsList: t.payload</data><data>
                    loadingEtd: !1</data><data>
                    errorEtdIs: !1
                });
            case a.ETD_ALL_STOP:
                return babelHelpers.extends({}</data><data> e</data><data> {
                    stopList: t.payload</data><data>
                    loading: !1</data><data>
                    loadingEtd: !1</data><data>
                    errorEtdIs: !1
                });
            case a.ETD_FETCHDATA_SUCESS:
                return babelHelpers.extends({}</data><data> e</data><data> {
                    loadingEtd: !1</data><data>
                    errorEtdIs: !1
                });
            case a.ETD_ERROR:
                return babelHelpers.extends({}</data><data> e</data><data> {
                    errorEtdIs: !0
                });
            case a.ETA_STOP_LIST_FOR_MAP:
                return babelHelpers.extends({}</data><data> e</data><data> {
                    etdStopListForMap: t.payload</data><data>
                    loadingEtd: !1</data><data>
                    errorEtdIs: !1
                });
            default:
                return e
        }
    }
}</data><data>


        l = {
            errorMsg: !1</data><data>
            loadingTimeTable: !1</data><data>
            loadingSearch: !1</data><data>
            routeList: []</data><data>
            busListForRoute: []</data><data>
            stopList: []</data><data>
            searchRouteList: []</data><data>
            isNoResultFound: !1
        };
    o.default = function() {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : l</data><data>
            r = arguments[1];
        switch (r.type) {
            case a.TIME_TABLE_ROUTE_LIST:
                return babelHelpers.extends({}</data><data> e</data><data> {
                    routeList: r.payload</data><data>
                    loadingTimeTable: !1</data><data>
                    isNoResultFound: !1</data><data>
                    errorMsg: !1
                });
            case a.TIME_TABLE_BUS_LIST:
                return babelHelpers.extends({}</data><data> e</data><data> {
                    busListForRoute: r.payload</data><data>
                    loadingTimeTable: !1</data><data>
                    isNoResultFound: !1</data><data>
                    errorMsg: !1
                });
            case a.TIME_TABLE_STOP_LIST:
                return babelHelpers.extends({}</data><data> e</data><data> {
                    stopList: r.payload</data><data>
                    loadingTimeTable: !1</data><data>
                    isNoResultFound: !1</data><data>
                    errorMsg: !1
                });
            case a.FETCHING_DATA:
                return babelHelpers.extends({}</data><data> e</data><data> {
                    loadingTimeTable: !0</data><data>
                    isNoResultFound: !1</data><data>
                    errorMsg: !1
                });
            case a.SEARCH_LOADING:
                return babelHelpers.extends({}</data><data> e</data><data> {
                    loadingSearch: !0</data><data>
                    isNoResultFound: !1</data><data>
                    errorMsg: !1
                });
            case a.SEARCH_ROUTE_LIST:
                return babelHelpers.extends({}</data><data> e</data><data> {
                    loadingTimeTable: !1</data><data>
                    searchRouteList: r.payload</data><data>
                    loadingSearch: !1</data><data>
                    isNoResultFound: !1</data><data>
                    errorMsg: !1
                });
            case a.NO_RESULT_FOUND:
                return babelHelpers.extends({}</data><data> e</data><data> {
                    loadingTimeTable: !1</data><data>
                    isNoResultFound: !0</data><data>
                    errorMsg: !1
                });
            case a.FETCHING_DATA_SUCESS:
                return babelHelpers.extends({}</data><data> e</data><data> {
                    loadingSearch: !1</data><data>
                    isNoResultFound: !1</data><data>
                    loadingTimeTable: !1</data><data>
                    errorMsg: !1
                });
            case a.TIME_TABLE_ERROR:
                return babelHelpers.extends({}</data><data> e</data><data> {
                    errorMsg: !0
                });
            default:
                return e
        }
        switch (t.type) {
            case l.CONTACT_DETAILS:
        switch (r.type) {
            case n.PLACES_OF_ATTRACTION:
            case n.PA_SEARCH:
            case n.PA_SEARCH_SUCESS:
            case n.PA_SEARCH_ERROR:

            updatesList: []
            case n.UPDATES:
        t = {
            loadingPlan: !1</data><data>
            loadingPlans: !1</data><data>
            getPlanStopList: []</data><data>
            getPlanRouteDetailList: []</data><data>
        switch (e.type) {
            case r.GET_PLAN_STOPLIST:
            case r.GET_PLAN_ROUTEDETAIL_LIST:
            case r.PLAN_FETCHING_DATA:
            case r.FETCHING_DATA_PLN:
            case r.PLAN_ERROR:
            case r.PLAN_FETCHING_DATA_SUCESS:
        o = {
            loadingFC: !1
            getfareList: []
            fareError: !1
            fareIs: {}
            filteredList: []
            farechartStopList: []
            fareStop1: ""
            fareStop2: ""
            fareRoute: []
            searchRouteList: []
            fareAmount: {
                From: ""
                Price: ""
                RiderType: ""
                Route: ""
                To: ""
                fare_chart_stop_one_object: {}
                fare_chart_stop_two_object: {}
            }
        switch (r.type) {
            case l.FETCHING_DATA:
            case l.GET_FARECHART_LIST:
            case l.FARECHAT_FETCH_SUCESS:
            case l.FARECHAT_ERROR:
            case l.GET_FARE:
            case l.FILTERED_LIST:
            case l.FARECHART_ROUTE_SET:
            case l.FARECHART_STOP1_SET:
            case l.FARECHART_STOP2_SET:
            case l.FARECHART_STOPS:
            case l.FARECHART_SEARCH_ROUTE_LIST:
            case "clearFilterData":
            case "fareAmount":
            case "clearReducerData": {
                    filteredList: []
                    fareRoute: []
                    loadingFC: !1
                    fareAmount: {
                        From: ""
                        Price: ""
                        RiderType: ""
                        Route: ""
                        To: ""
                    }
                    fareStop1: ""
                    fareStop2: ""
                });
            case l.FARECHART_STOP_ONE_OBJECT:
            case l.FARECHART_STOP_TWO_OBJECT:
        n = {
            name: ""
            contactOne: ""
            contactTwo: ""
            errorUserDetails: !1
            loadingUserDetails: !1
        };
        switch (a.type) {
            case s.NAME_CHANGE:
            case s.CONTACT_ONE_CHANGE:
            case s.CONTACT_TWO_CHANGE:
            case s.SOS_DETAILS_FETCHING_DATA:
            case s.SOS_DETAILS_FETCHING_SUCESS:
            userName: "Login/Register"</data><data>
            token: " "</data><data>
            userEmail: ""</data><data>
            userImage: ""</data><data>
            isLoading: !1</data><data>
            myCardList: []
        });
        switch (a.type) {
            case "FETCHING_MY_CARD_LIST":
            case t.USER_NAME_CHECK:
            case t.USER_EMAIL_CHECK:
            case t.USER_IMAGE_CHECK:
            case "MY_CARDLIST_RCKEY":
            for (;;) switch (t.prev = t.next) {
                case 0:
                    return t.next = 2</data><data> w.awrap(x.AsyncStorage.setItem("userData"</data><data> JSON.stringify(e)));
                case 2:
                case 3:
                case "end":
                    return t.stop()
            }
        switch (a.type) {
            case s.ROUTE_DIAGRAM_ROUTE_LIST:
            case s.ROUTE_DIAGRAM_LOADER:
            case s.ROUTE_DIAGRAM_MAP_LOADER:
            case s.ROUTE_DIAGRAM_STOPS_ON_ROUTE_LIST:
            case s.ROUTE_DIAGRAM_STOPS_ON_ROUTE_POSITION:

        _ = {
            transaction_history_list_footer_loader: !1</data><data>
            transaction_history_loader: !1</data><data>
            transaction_history_list: []
        };
        switch (e.type) {
            case o.TRANSACTION_HISTORY_LOADER:
            case o.TRANSACTION_HISTORY_LIST:
            case o.TRANSACTION_HISTORY_LIST_FOOTER_LOADER:
        _ = {
            myCardList: []</data><data>
            isLoading: !0</data><data>
            add_topup_loader: !1</data><data>
            add_topup_form_response: ""
        switch (a.type) {
            case t.ADD_TOPUP_LOADER:
            case t.ADD_TOPUP__FORM_RESPONSE:
            case "FETCHING_MY_CARD_LIST":
            case "MY_CARDLIST_RCKEY":
            }    key: "Login1"
                title: "Redux Sample"
            }    key: "Login"
                title: "Login"
            }    key: "LoginOtp"
            key: "GenerateOtp"
            key: "RegisterPage"
              key: "ForgotPassword"
                  key: "StopDetailsTimeTable"
                title: "New file"

                title: "Time Table"

                key: "BusDetailsTimeTable"</data><data>
                title: "BusDetailsTimeTable"

                key: "RouteBusInfoTimeTable"
                title: "RouteBusInfoTimeTable"
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "BusDetailsEta"</data><data>
                component: H.default</data><data>
                title: "Eta Bus Details"
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "RouteDetailsEta"</data><data>
                component: B.default</data><data>
                title: "RouteDetailsEta"
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "StopSearchEtd"</data><data>
                component: be.default</data><data>
                title: "StopSearchEta"</data><data>
                hideNavBar: !0
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "RouteDetailsEtd"</data><data>
                component: X.default</data><data>
                title: "RouteDetailsEtd"
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "MapEta"</data><data>
                component: h.default</data><data>
                title: "Map"
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "BusDetailsEtd"</data><data>
                component: Z.default</data><data>
                title: "BusDetailsEtd"
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "RouteDetailsPlan"</data><data>
                component: K.default</data><data>
                title: "Routes"
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "StopNamePlan"</data><data>
                component: ee.default</data><data>
                title: "Stop Names"</data><data>
                hideNavBar: !0
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "RouteNamePlan"</data><data>
                component: ae.default</data><data>
                title: "Route Name"</data><data>
                hideNavBar: !0
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "BusDetailsPlan"</data><data>
                component: ie.default</data><data>
                title: "Route Details"
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "GrievanceForm"</data><data>
                component: ge.default</data><data>
                title: "Grievance"
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "GrievancesDetails"</data><data>
                component: Fe.default</data><data>
                title: "Details"
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "PlacesofAttractionDetail"</data><data>
                component: he.default</data><data>
                title: "Places Detail"
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "SeeFormDetailsSos"</data><data>
                component: Oe.default</data><data>
                title: "SOS Details"
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "SubmitFormSos"</data><data>
                component: Ie.default</data><data>
                title: "SOS"
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "DrawerItem"</data><data>
                component: je.default
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "DatePickerComponent"</data><data>
                component: re.default</data><data>
                title: "DatePickerComponent"</data><data>
                hideNavBar: !0
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "UploadPhoto"</data><data>
                component: O.default</data><data>
                title: "UploadPhoto"</data><data>
                hideNavBar: !0
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "UserDetails"</data><data>
                component: Ue.default</data><data>
                title: "Edit Profile"
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "Medium"</data><data>
                component: Ze.default</data><data>
                title: ""</data><data>
                hideNavBar: !0
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "FareChartDummySearch"</data><data>
                component: rt.default</data><data>
                hideNavBar: !0
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "Dashboard"</data><data>
                component: g.default</data><data>
                title: "Dashboard"</data><data>
                initial: !0</data><data>
                duration: 2
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "FareChartRouteSearch"</data><data>
                component: ct.default</data><data>
                title: "Fare Chart"</data><data>
                hideNavBar: !0
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "FareChartStopSearch"</data><data>
                component: st.default</data><data>
                title: "Fare Chart"</data><data>
                hideNavBar: !0
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "MyAccount"</data><data>
                component: et.default</data><data>
                title: "MyAccount"</data><data>
                hideNavBar: !0
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "Grievances"</data><data>
                component: Be.default</data><data>
                title: "Grievances"</data><data>
                hideNavBar: !0
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "GrievanceRouteSearch"</data><data>
                component: pt.default</data><data>
                title: "GrievanceRouteSearch"</data><data>
                hideNavBar: !0
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "GrievanceStopSearch"</data><data>
                component: mt.default</data><data>
                title: "GrievanceStopSearch"</data><data>
                hideNavBar: !0
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "Payment"</data><data>
                component: kt.default</data><data>
                title: "Payment"</data><data>
                hideBackImage: !0</data><data>
                hideNavBar: !0
            })</data><data> n.default.createElement(u.Drawer</data><data> {
                hideNavBar: !0</data><data>
                key: "drawer"</data><data>
                contentComponent: Je.default</data><data>
                navBar: Ke.default</data><data>
                drawerWidth: 300</data><data>
                onOpen: function() {
                    return u.Actions.refresh({
                        key: 1</data><data>
                        open: !0
                    })
                }</data><data>
                onClose: function() {
                    return u.Actions.refresh({
                        key: 0</data><data>
                        open: !1
                    })
                }</data><data>
                panHandlers: null
            }</data><data> n.default.createElement(u.Modal</data><data> {
                key: "modal"</data><data>
                hideNavBar: !1</data><data>
                transitionConfig: function() {
                    return {
                        screenInterpolator: ut.default.forFadeFromBottomAndroid</data><data>
                        transitionSpec: {
                            duration: 500</data><data>
                            timing: i.Animated.timing
                        }
                    }
                }
            }</data><data> n.default.createElement(u.Scene</data><data> {
                key: "FeedBack"</data><data>
                component: U.default</data><data>
                title: "Feedback"
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "TimeTable"</data><data>
                component: z.default</data><data>
                title: "Time Table"</data><data>
                search: "TimeTable"</data><data>
                navBar: ze.default
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "StopSearchEta"</data><data>
                component: de.default</data><data>
                title: "Bus Details"
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "Eta"</data><data>
                component: fe.default</data><data>
                search: "ETA"</data><data>
                title: "Arrival"</data><data>
                navBar: ze.default
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "Etd"</data><data>
                component: oe.default</data><data>
                title: "Departure"</data><data>
                search: "ETA"</data><data>
                navBar: ze.default
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "JourneyPlanner"</data><data>
                component: j.default</data><data>
                title: "Journey Planner"</data><data>
                search: "JourneyPlanner"
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "Ticketing"</data><data>
                component: I.default</data><data>
                title: "Recharge"
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "Updates"</data><data>
                component: J.default</data><data>
                title: "Updates"
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "Favourite"</data><data>
                component: De.default</data><data>
                title: "Favourite"
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "Grievances"</data><data>
                component: Be.default</data><data>
                title: "Grievances"
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "PlacesofAttraction"</data><data>
                component: He.default</data><data>
                title: "Places of Attraction"
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "Contact"</data><data>
                component: Ee.default</data><data>
                title: "Emergency Contacts"</data><data>
                hideNavBar: !0
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "FareChart"</data><data>
                component: Ce.default</data><data>
                title: "Fare Chart"</data><data>
                hideNavBar: !0
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "Sos"</data><data>
                component: Ge.default</data><data>
                title: "SOS"
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "FareChartDummy"</data><data>
                component: at.default</data><data>
                title: "Fare Chart"
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "StopDetails"</data><data>
                component: St.default</data><data>
                title: "Stop Details"</data><data>
                hideNavBar: !0
            })</data><data> n.default.createElement(u.Scene</data><data> {
                key: "RouteDiagramComponent"</data><data>
                component: yt.default</data><data>
                title: "Route Diagram"
    }</data><data> a.sampleApiCallWigh_Params = function(e) {
        e.email</data><data> e.password;
        return function(e) {
            var t</data><data> n;
            return c.async(function(a) {
                for (;;) switch (a.prev = a.next) {
                    case 0:
                        return e({
                            type: r.FETCHING_DATA
                        })</data><data> a.prev = 1</data><data> t = {
                            UserName: "powergrid"</data><data>
                            Password: "bipros123#"</data><data>
                            grant_type: "password"
                        }</data><data> a.next = 5</data><data> c.awrap(s.default.post("token"</data><data> t));
                    case 5:
                        n = a.sent</data><data> console.log("Login resp " + n)</data><data> a.next = 11;
                        break;
                    case 9:
                        a.prev = 9</data><data> a.t0 = a.catch(1);
                    case 11:
                    case "end":
                        return a.stop()
                }
            }</data><data> null</data><data> i</data><data> [
                [1</data><data> 9]
            ])
        }
    }</data><data> a.sampleApiCall = function(e) {
        e.email;
        return function(e) {
            var t</data><data> n;
            return c.async(function(a) {
                for (;;) switch (a.prev = a.next) {
                    case 0:
                        return e({
                            type: r.FETCHING_DATA
                        })</data><data> a.prev = 1</data><data> t = {
                            processDefinitionKey: "BRTSCompliant"</data><data>
                            tenantId: "BRTS"</data><data>
                            title: "DemoTest 2"</data><data>
                            incidentDateTime: "2017-12-22T12:05:55+05:30"</data><data>
                            incidentCategory: "4000"</data><data>
                            incidentSubCategory: "4031"</data><data>
                            busNum: "M006"</data><data>
                            operatorId: "SMTL"</data><data>
                            priority: "Medium"</data><data>
                            severity: "Medium"</data><data>
                            equipmentId: "351501052474501"</data><data>
                            equipmentName: "OBU"</data><data>
                            routeId: "8D"</data><data>
                            stopId: "75"</data><data>
                            location: "Kashiram Textiles"</data><data>
                            incidentDesc: "DemoTest 2"</data><data>
                            originSystem: "Manual"
                        }</data><data> a.next = 6</data><data> c.awrap(s.default.postGrievances("http://192.168.1.224:8080/engine-rest/imsExternalTask/createIncident"</data><data> t));
                    case 6:
                        n = a.sent</data><data> e({
                            type: r.ORIGIN_REF</data><data>
                            payload: (0</data><data> p.makeList)(n)
                        })</data><data> a.next = 13;
                        break;
                    case 11:
                        a.prev = 11</data><data> a.t0 = a.catch(1);
                    case 13:
                    case "end":
                        return a.stop()
                }
            }</data><data> null</data><data> i</data><data> [
                [1</data><data> 11]
            ])
        }
    }</data><data> a.CallinSample = function(e) {
        var n = (e.email</data><data> "Demo Test")</data><data>
            a = (t(482)</data><data> {
                processDefinitionKey: "BRTSCompliant"</data><data>
                tenantId: "BRTS"</data><data>
                title: n</data><data>
                incidentDateTime: "2017-12-22T12:05:55+05:30"</data><data>
                incidentCategory: "4000"</data><data>
                incidentSubCategory: "4031"</data><data>
                busNum: "M006"</data><data>
                operatorId: "SMTL"</data><data>
                priority: "Medium"</data><data>
                severity: "Medium"</data><data>
                equipmentId: "351501052474501"</data><data>
                equipmentName: "OBU"</data><data>
                routeId: "8D"</data><data>
                stopId: "75"</data><data>
                location: "Kashiram Textiles"</data><data>
                incidentDesc: n</data><data>
                originSystem: "Manual"
            });
        return function(e) {
            e({
                type: r.FETCHING_DATA
            });
            try {
                var t = new l("mobapp:mobapp123@").toString("base64");
                fetch("http://192.168.1.224:8080/engine-rest/imsExternalTask/createIncident"</data><data> {


            for (var a = (Array.from(new Set(r))</data><data> 0); a < i; a++) {
                var d = {
                    MonitoringRef: o[a].MonitoringRef ? o[a].MonitoringRef : ""</data><data>
                    routeCode: o[a].MonitoredVehicleJourney.LineRef ? o[a].MonitoredVehicleJourney.LineRef : ""</data><data>
                    DirectionRef: o[a].MonitoredVehicleJourney.DirectionRef ? o[a].MonitoredVehicleJourney.DirectionRef : ""</data><data>
                    VariantRef: o[a].MonitoredVehicleJourney.VariantRef ? o[a].MonitoredVehicleJourney.VariantRef : ""</data><data>
                    PublishedLineName: o[a].MonitoredVehicleJourney.PublishedLineName ? o[a].MonitoredVehicleJourney.PublishedLineName : ""</data><data>
                    OriginRef: o[a].MonitoredVehicleJourney.OriginRef ? o[a].MonitoredVehicleJourney.OriginRef : ""</data><data>
                    OriginName: o[a].MonitoredVehicleJourney.OriginName ? o[a].MonitoredVehicleJourney.OriginName : ""</data><data>
                    DestinationRef: o[a].MonitoredVehicleJourney.DestinationRef ? o[a].MonitoredVehicleJourney.DestinationRef : ""</data><data>
                    DestinationName: o[a].MonitoredVehicleJourney.DestinationName ? o[a].MonitoredVehicleJourney.DestinationName : ""</data><data>
                    Monitored: !!o[a].MonitoredVehicleJourney.Monitored && o[a].MonitoredVehicleJourney.Monitored</data><data>
                    VehicleLocationLongitude: o[a].MonitoredVehicleJourney.VehicleLocation.Longitude ? o[a].MonitoredVehicleJourney.VehicleLocation.Longitude : ""</data><data>
                    VehicleLocationLatitude: o[a].MonitoredVehicleJourney.VehicleLocation.Latitude ? o[a].MonitoredVehicleJourney.VehicleLocation.Latitude : ""</data><data>
                    Occupancy: o[a].MonitoredVehicleJourney.Occupancy ? o[a].MonitoredVehicleJourney.Occupancy : ""</data><data>
                    ApproachingDistance: o[a].MonitoredVehicleJourney.ApproachingDistance ? o[a].MonitoredVehicleJourney.ApproachingDistance : ""</data><data>
                    VehicleRefForMapChecking: o[a].MonitoredVehicleJourney.VehicleRef ? o[a].MonitoredVehicleJourney.VehicleRef : a + 1</data><data>
                    VehicleRef: o[a].MonitoredVehicleJourney.VehicleRef ? o[a].MonitoredVehicleJourney.VehicleRef : "NEXT BUS"</data><data>
                    VisitNumber: o[a].MonitoredVehicleJourney.MonitoredCall.VisitNumber ? o[a].MonitoredVehicleJourney.MonitoredCall.VisitNumber : ""</data><data>
                    Order: o[a].MonitoredVehicleJourney.MonitoredCall.Order ? o[a].MonitoredVehicleJourney.MonitoredCall.Order : ""</data><data>
                    VehicleAtStop: !!o[a].MonitoredVehicleJourney.MonitoredCall.VehicleAtStop && o[a].MonitoredVehicleJourney.MonitoredCall.VehicleAtStop</data><data>
                    stopName: o[a].MonitoredVehicleJourney.MonitoredCall.StopPointName ? o[a].MonitoredVehicleJourney.MonitoredCall.StopPointName : ""</data><data>
                    VehicleAtStop_Longitude: o[a].MonitoredVehicleJourney.MonitoredCall.VehicleLocationV1DtoAtStop && o[a].MonitoredVehicleJourney.MonitoredCall.VehicleLocationV1DtoAtStop.Longitude ? o[a].MonitoredVehicleJourney.MonitoredCall.VehicleLocationV1DtoAtStop.Longitude : ""</data><data>
                    VehicleAtStop_Latitude: o[a].MonitoredVehicleJourney.MonitoredCall.VehicleLocationV1DtoAtStop && o[a].MonitoredVehicleJourney.MonitoredCall.VehicleLocationV1DtoAtStop.Latitude ? o[a].MonitoredVehicleJourney.MonitoredCall.VehicleLocationV1DtoAtStop.Latitude : ""</data><data>
                    AimedArrivalTime: l(o[a].MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime ? o[a].MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime : "")</data><data>
                    ArrivingIn: Math.round(o[a].MonitoredVehicleJourney.MonitoredCall.ArrivingIn ? o[a].MonitoredVehicleJourney.MonitoredCall.ArrivingIn : "")</data><data>
                    ExpectedArrivalTime: l(o[a].MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime ? o[a].MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime : "")</data><data>
                    AimedDepartureTime: l(o[a].MonitoredVehicleJourney.MonitoredCall.AimedDepartureTime ? o[a].MonitoredVehicleJourney.MonitoredCall.AimedDepartureTime : "")</data><data>
                    ExpectedDepartureTime: l(o[a].MonitoredVehicleJourney.MonitoredCall.ExpectedDepartureTime ? o[a].MonitoredVehicleJourney.MonitoredCall.ExpectedDepartureTime : "")</data><data>
                    position: {
                        stopLatitude: o[a].MonitoredVehicleJourney.MonitoredCall.VehicleLocationV1DtoAtStop && o[a].MonitoredVehicleJourney.MonitoredCall.VehicleLocationV1DtoAtStop.Latitude ? o[a].MonitoredVehicleJourney.MonitoredCall.VehicleLocationV1DtoAtStop.Latitude : ""</data><data>
                        stopLongitude: o[a].MonitoredVehicleJourney.MonitoredCall.VehicleLocationV1DtoAtStop && o[a].MonitoredVehicleJourney.MonitoredCall.VehicleLocationV1DtoAtStop.Longitude ? o[a].MonitoredVehicleJourney.MonitoredCall.VehicleLocationV1DtoAtStop.Longitude : ""
                    }</data><data>
                    vehicleLocation: {
                        busLatitude: o[a].MonitoredVehicleJourney.VehicleLocation && o[a].MonitoredVehicleJourney.VehicleLocation.Latitude ? o[a].MonitoredVehicleJourney.VehicleLocation.Latitude : ""</data><data>
                        busLongitude: o[a].MonitoredVehicleJourney.VehicleLocation && o[a].MonitoredVehicleJourney.VehicleLocation.Longitude ? o[a].MonitoredVehicleJourney.VehicleLocation.Longitude : ""
                    }
                };
                            var r = {
                                Position: {
                                    stopLongitude: e[i].Position.stopLongitude ? e[i].Position.stopLongitude : ""</data><data>
                                    stopLatitude: e[i].Position.stopLatitude ? e[i].Position.stopLatitude : ""
                                }</data><data>
                                RouteCodes: e[i].RouteCodes ? e[i].RouteCodes : ""</data><data>
                                Sequence: e[i].Sequence ? e[i].Sequence : ""</data><data>
                                shortStopName: e[i].shortStopName ? e[i].shortStopName : ""</data><data>
                                stationCode: e[i].stationCode ? e[i].stationCode : ""</data><data>
                                stopCode: e[i].stopCode ? e[i].stopCode : ""</data><data>
                                stopName: e[i].stopName ? e[i].stopName : ""</data><data>
                                stopType: e[i].stopType ? e[i].stopType : ""</data><data>
                                FavoriteRoute: e[i].RouteCodes ? e[i].RouteCodes : ""</data><data>
                                StopName: e[i].stopName ? e[i].stopName : ""</data><data>
                                StopCode: e[i].stopCode ? e[i].stopCode : ""</data><data>
                                UserFavoriteId: t[i].UserFavoriteId</data><data>
                                UserId: t[i].UserId</data><data>
                                CreatedDate: t[i].CreatedDate</data><data>
                                FavoriteType: "stop"</data><data>
                                IsActive: !0
                            };
                            o.push(r)
                        } else {
                            var n = {
                                Position: {
                                    stopLongitude: e[i].Position.stopLongitude</data><data>
                                    stopLatitude: e[i].Position.stopLatitude
                                }</data><data>
                                RouteCodes: e[i].RouteCodes</data><data>
                                Sequence: e[i].Sequence</data><data>
                                shortStopName: e[i].shortStopName</data><data>
                                stationCode: e[i].stationCode</data><data>
                                stopCode: e[i].stopCode</data><data>
                                stopName: e[i].stopName</data><data>
                                stopType: e[i].stopType</data><data>
                                StopName: ""</data><data>
                                StopCode: ""</data><data>
                                UserFavoriteId: ""</data><data>
                                UserId: ""</data><data>
                                CreatedDate: ""</data><data>
                                FavoriteRoute: ""</data><data>
                                FavoriteType: ""</data><data>
                                IsActive: !1
                            };
                            o.push(n)
                        } else o = e
                }</data><data> r = 0; r < e.length; r++) i(r);
        return o
    }

    function d(e</data><data> t) {
        var o = [];
        if (null != e) {
            for (i = 0; i <= e.length - 1; i++) {
                var r = {
                    Position: {
                        stopLongitude: e[i].Position.stopLongitude ? e[i].Position.stopLongitude : ""</data><data>
                        stopLatitude: e[i].Position.stopLatitude ? e[i].Position.stopLatitude : ""
                    }</data><data>
                    RouteCodes: e[i].RouteCodes ? e[i].RouteCodes : ""</data><data>
                    Sequence: e[i].Sequence ? e[i].Sequence : ""</data><data>
                    shortStopName: e[i].shortStopName ? e[i].shortStopName : ""</data><data>
                    stationCode: e[i].stationCode ? e[i].stationCode : ""</data><data>
                    stopCode: e[i].stopCode ? e[i].stopCode : ""</data><data>
                    stopName: e[i].stopName ? e[i].stopName : ""</data><data>
                    stopType: e[i].stopType ? e[i].stopType : ""</data><data>
                    FavoriteRoute: ""</data><data>
                    StopName: ""</data><data>
                    StopCode: ""</data><data>
                    UserFavoriteId: ""</data><data>
                    UserId: ""</data><data>
                    CreatedDate: ""</data><data>
                    FavoriteType: "stop"</data><data>
                    IsActive: !1
                };
                o.push(r)
            }
            if (null != t)
                for (i = 0; i <= o.length - 1; i++)
                    for (j = 0; j <= t.length - 1; j++) console.log(o[i].stopCode)</data><data> console.log(t[j].StopCode)</data><data> t[j].StopCode == o[i].stopCode && (o[i].FavoriteRoute = t[j].FavoriteRoute ? t[j].FavoriteRoute : ""</data><data> o[i].StopName = t[j].StopName ? t[j].StopName : ""</data><data> o[i].StopCode = t[j].StopCode ? t[j].StopCode : ""</data><data> o[i].UserFavoriteId = t[j].UserFavoriteId ? t[j].UserFavoriteId : ""</data><data> o[i].UserId = t[j].UserId ? t[j].UserId : ""</data><data> o[i].CreatedDate = t[j].CreatedDate ? t[j].CreatedDate : ""</data><data> o[i].IsActive = !!t[j].IsActive && t[j].IsActive)
        }
        return o
    }

    function l(e) {
        if ("" == e) return "";
        var t = e.split("T")</data><data>
            o = (t[0]</data><data> t[1])</data><data>
            i = o.split("+");
        return i[0]
    }

    function c(e) {
        for (var t = []</data><data> o = 0; o < e.length; o++) {
            var i = {
                stopName: e[o].stopName</data><data>
                stopLongitude: e[o].Position.stopLongitude</data><data>
                stopLatitude: e[o].Position.stopLatitude</data><data>
                animDelay: 500 * o
            };
            t.push(i)
        }
        return t
    }
    Object.defineProperty(r</data><data> "__esModule"</data><data> {
        value: !0
    })</data><data> r.MonitoredVehicleJourney = r.busStopDetails = r.routeDetails = r.etaStopDetailsList = void 0</data><data> r.getEtaList = n</data><data> r.getFevStopListTest = a</data><data> r.getFevStopList = d</data><data> r.getEtaListForMap = c;
    var u = t(485);
    r.etaStopDetailsList = [{
        locName: "RTO- DH"
    }</data><data> {
        locName: "1ST GATE - 1"
    }</data><data> {
        locName: "1ST GATE - 2"
    }</data><data> {
        locName: "2ND GATE - 1"
    }</data><data> {
        locName: "2ND GATE - 2"
    }</data><data> {
        locName: "2ND GATE - 3"
    }</data><data> {
        locName: "ABHINAYA NAGAR - 1"
    }</data><data> {
        locName: "ABHINAYA NAGAR - 2"
    }</data><data> {
        locName: "ADDHYAPARK NAGAR - 1"
    }</data><data> {
        locName: "ADDHYAPARK NAGAR - 2"
    }</data><data> {
        locName: "AIRPORT - 1"
    }</data><data> {
        locName: "AIRPORT - 2"
    }]</data><data> r.routeDetails = [{
        busNo: "100D-DKMC"</data><data>
        startplace: "DEPOT"</data><data>
        starttime: "12:00PM"</data><data>
        endplace: "KMC"</data><data>
        endtime: "03:00PM"
    }</data><data> {
        busNo: "100D-CBT"</data><data>
        startplace: "CBT"</data><data>
        starttime: "10:50AM"</data><data>
        endplace: "DEPOT"</data><data>
        endtime: "12:50PM"
    }</data><data> {
        busNo: "100D-CBT1D"</data><data>
        startplace: "PATRAKARTH NAGAR"</data><data>
        starttime: "10:50AM"</data><data>
        endplace: "CBT"</data><data>
        endtime: "12:50PM"
    }</data><data> {
        busNo: "500D-HB"</data><data>
        startplace: "PATRAKARTH NAGAR"</data><data>
        starttime: "10:50AM"</data><data>
        endplace: "CBT"</data><data>
        endtime: "12:50PM"
    }</data><data> {
        busNo: "11D"</data><data>
        startplace: "PATRAKARTH NAGAR"</data><data>
        starttime: "10:50AM"</data><data>
        endplace: "CBT"</data><data>
        endtime: "12:50PM"
    }</data><data> {
        busNo: "100D-DKMC"</data><data>
        startplace: "PATRAKARTH NAGAR"</data><data>
        starttime: "10:50AM"</data><data>
        endplace: "CBT"</data><data>
        endtime: "12:50PM"
    }</data><data> {
        busNo: "100D-CBT1D"</data><data>
        startplace: "PATRAKARTH NAGAR"</data><data>
        starttime: "10:50AM"</data><data>
        endplace: "CBT"</data><data>
        endtime: "12:50PM"
    }</data><data> {
        busNo: "500D-HB"</data><data>
        startplace: "PATRAKARTH NAGAR"</data><data>
        starttime: "10:50AM"</data><data>
        endplace: "CBT"</data><data>
        endtime: "12:50PM"
    }</data><data> {
        busNo: "11D"</data><data>
        startplace: "PATRAKARTH NAGAR"</data><data>
        starttime: "10:50AM"</data><data>
        endplace: "CBT"</data><data>
        endtime: "12:50PM"
    }</data><data> {
        busNo: "100D-DKMC"</data><data>
        startplace: "PATRAKARTH NAGAR"</data><data>
        starttime: "10:50AM"</data><data>
        endplace: "CBT"</data><data>
        endtime: "12:50PM"
    }</data><data> {
        busNo: "500D-HB"</data><data>
        startplace: "PATRAKARTH NAGAR"</data><data>
        starttime: "10:50AM"</data><data>
        endplace: "CBT"</data><data>
        endtime: "12:50PM"
    }</data><data> {
        busNo: "11D"</data><data>
        startplace: "PATRAKARTH NAGAR"</data><data>
        starttime: "10:50AM"</data><data>
        endplace: "CBT"</data><data>
        endtime: "12:50PM"
    }</data><data> {
        busNo: "100D-DKMC"</data><data>
        startplace: "PATRAKARTH NAGAR"</data><data>
        starttime: "10:50AM"</data><data>
        endplace: "CBT"</data><data>
        endtime: "12:50PM"
    }</data><data> {
        busNo: "100D-CBT1D"</data><data>
        startplace: "PATRAKARTH NAGAR"</data><data>
        starttime: "10:50AM"</data><data>
        endplace: "CBT"</data><data>
        endtime: "12:50PM"
    }</data><data> {
        busNo: "500D-HB"</data><data>
        startplace: "PATRAKARTH NAGAR"</data><data>
        starttime: "10:50AM"</data><data>
        endplace: "CBT"</data><data>
        endtime: "12:50PM"
    }</data><data> {
        busNo: "11D"</data><data>
        startplace: "PATRAKARTH NAGAR"</data><data>
        starttime: "10:50AM"</data><data>
        endplace: "CBT"</data><data>
        endtime: "12:50PM"
    }</data><data> {
        busNo: "100D-DKMC"</data><data>
        startplace: "PATRAKARTH NAGAR"</data><data>
        starttime: "10:50AM"</data><data>
        endplace: "CBT"</data><data>
        endtime: "12:50PM"
    }]</data><data> r.busStopDetails = [{
        busNo: "2341"</data><data>
        stopName: "HDMC- DH"</data><data>
        eta: "10:00AM"</data><data>
        etd: "10:05PM"
    }</data><data> {
        busNo: "2342"</data><data>
        stopName: "RTO- DH"</data><data>
        eta: "10:15AM"</data><data>
        etd: "10:20PM"
    }</data><data> {
        busNo: "2343"</data><data>
        stopName: "1ST GATE - 1"</data><data>
        eta: "10:30AM"</data><data>
        etd: "10:35PM"
    }</data><data> {
        busNo: "2344"</data><data>
        stopName: "1ST GATE - 2"</data><data>
        eta: "10:50AM"</data><data>
        etd: "10:55PM"
    }</data><data> {
        busNo: "2345"</data><data>
        stopName: "2ND GATE - 1"</data><data>
        eta: "11:05AM"</data><data>
        etd: "11:10PM"
    }</data><data> {
        busNo: "2346"</data><data>
        stopName: "2ND GATE - 2"</data><data>
        eta: "11:15AM"</data><data>
        etd: "11:20PM"
    }</data><data> {
        busNo: "2347"</data><data>
        stopName: "2ND GATE - 3"</data><data>
        eta: "11:30AM"</data><data>
        etd: "11:35PM"
    }</data><data> {
        busNo: "2348"</data><data>
        stopName: "ABHINAYA NAGAR - 1"</data><data>
        eta: "11:50AM"</data><data>
        etd: "11:55PM"
    }</data><data> {
        busNo: "2349"</data><data>
        stopName: "ABHINAYA NAGAR - 2"</data><data>
        eta: "12:05AM"</data><data>
        etd: "12:07PM"
    }</data><data> {
        busNo: "2366"</data><data>
        stopName: "ADDHYAPARK NAGAR - 1"</data><data>
        eta: "12:15AM"</data><data>
        etd: "12:18PM"
    }</data><data> {
        busNo: "2355"</data><data>
        stopName: "ADDHYAPARK NAGAR - 2"</data><data>
        eta: "12:30AM"</data><data>
        etd: "12:35PM"
    }</data><data> {
        busNo: "2333"</data><data>
        stopName: "AIRPORT - 1"</data><data>
        eta: "12:45AM"</data><data>
        etd: "12:47PM"
    }]</data><data> r.MonitoredVehicleJourney = {
        ResponseTimestamp: "2017-12-05T13:18:12+05:30"</data><data>
        ValidUntil: "2017-12-05T13:20:12+05:30"</data><data>
        MonitoredStopVisit: [{
            RecordedAtTime: "2017-12-05T13:18:12+05:30"</data><data>
            MonitoringRef: "11441"</data><data>
            MonitoredVehicleJourney: {
                LineRef: "700-HD"</data><data>
                DirectionRef: "BSNL Building TO Jubilee Circle"</data><data>
                VariantRef: "Normal"</data><data>
                TripImportCode: null</data><data>
                PublishedLineName: "500"</data><data>
                OperatorRef: "CTB"</data><data>
                ProductCategoryRef: ""</data><data>
                ServiceFeatureRef: ""</data><data>
                OriginRef: "11021"</data><data>
                OriginName: "BSNL Building- HD"</data><data>
                DestinationRef: "11181"</data><data>
                DestinationName: "Jubilee Circle - HD"</data><data>
                Monitored: !0</data><data>
                VehicleLocation: {
                    Longitude: 75.12884366666667</data><data>
                    Latitude: 15.356017333333334
                }</data><data>
                Occupancy: "Seats Available"</data><data>
                ApproachingDistance: "0"</data><data>
                VehicleRef: "KA-25 3542"</data><data>
                MonitoredCall: {
                    VisitNumber: "1"</data><data>
                    Order: "11"</data><data>
                    VehicleAtStop: !1</data><data>
                    StopPointName: "Unkal Lake-D"</data><data>
                    VehicleLocationV1DtoAtStop: {
                        Longitude: 75.11158</data><data>
                        Latitude: 15.38238
                    }</data><data>
                    AimedArrivalTime: "2017-12-05T13:21:43+05:30"</data><data>
                    ExpectedArrivalTime: "2017-12-05T13:21:49+05:30"</data><data>
                    AimedDepartureTime: "2017-12-05T13:21:54+05:30"</data><data>
                    ExpectedDepartureTime: "2017-12-05T13:22:00+05:30"
                }
            }
        }</data><data> {
            RecordedAtTime: "2017-12-05T13:18:12+05:30"</data><data>
            MonitoringRef: "11441"</data><data>
            MonitoredVehicleJourney: {
                LineRef: "500-HD"</data><data>
                DirectionRef: "BSNL Building TO Jubilee Circle"</data><data>
                VariantRef: "Normal"</data><data>
                TripImportCode: null</data><data>
                PublishedLineName: "500"</data><data>
                OperatorRef: "CTB"</data><data>
                ProductCategoryRef: ""</data><data>
                ServiceFeatureRef: ""</data><data>
                OriginRef: "11021"</data><data>
                OriginName: "BSNL Building- HD"</data><data>
                DestinationRef: "11181"</data><data>
                DestinationName: "Jubilee Circle - HD"</data><data>
                Monitored: !0</data><data>
                VehicleLocation: {
                    Longitude: 75.12884366666667</data><data>
                    Latitude: 15.356017333333334
                }</data><data>
                Occupancy: "Seats Available"</data><data>
                ApproachingDistance: "0"</data><data>
                VehicleRef: "KA-25 2453"</data><data>
                MonitoredCall: {
                    VisitNumber: "1"</data><data>
                    Order: "11"</data><data>
                    VehicleAtStop: !1</data><data>
                    StopPointName: "Unkal Lake- H"</data><data>
                    VehicleLocationV1DtoAtStop: {
                        Longitude: 75.11158</data><data>
                        Latitude: 15.38238
                    }</data><data>
                    AimedArrivalTime: "2017-12-05T13:21:43+05:30"</data><data>
                    ExpectedArrivalTime: "2017-12-05T13:21:49+05:30"</data><data>
                    AimedDepartureTime: "2017-12-05T13:21:54+05:30"</data><data>
                    ExpectedDepartureTime: "2017-12-05T13:22:00+05:30"
                }
            }
        }</data><data> {
            RecordedAtTime: "2017-12-05T13:18:12+05:30"</data><data>
            MonitoringRef: "11441"</data><data>
            MonitoredVehicleJourney: {
                LineRef: "500-HD"</data><data>
                DirectionRef: "BSNL Building TO Jubilee Circle"</data><data>
                VariantRef: "Normal"</data><data>
                TripImportCode: null</data><data>
                PublishedLineName: "500"</data><data>
                OperatorRef: "CTB"</data><data>
                ProductCategoryRef: ""</data><data>
                ServiceFeatureRef: ""</data><data>
                OriginRef: "11021"</data><data>
                OriginName: "BSNL Building- HD"</data><data>
                DestinationRef: "11181"</data><data>
                DestinationName: "Jubilee Circle - HD"</data><data>
                Monitored: !0</data><data>
                VehicleLocation: {
                    Longitude: 75.12884366666667</data><data>
                    Latitude: 15.356017333333334
                }</data><data>
                Occupancy: "Seats Available"</data><data>
                ApproachingDistance: "0"</data><data>
                VehicleRef: "KA-25 1425"</data><data>
                MonitoredCall: {
                    VisitNumber: "1"</data><data>
                    Order: "11"</data><data>
                    VehicleAtStop: !1</data><data>
                    StopPointName: "Unkal Lake"</data><data>
                    VehicleLocationV1DtoAtStop: {
                        Longitude: 75.11158</data><data>
                        Latitude: 15.38238
                    }</data><data>
                    AimedArrivalTime: "2017-12-05T13:21:43+05:30"</data><data>
                    ExpectedArrivalTime: "2017-12-05T13:21:49+05:30"</data><data>
                    AimedDepartureTime: "2017-12-05T13:21:54+05:30"</data><data>
                    ExpectedDepartureTime: "2017-12-05T13:22:00+05:30"
                }
            }
        }</data><data> {
            RecordedAtTime: "2017-12-05T13:18:12+05:30"</data><data>
            MonitoringRef: "11441"</data><data>
            MonitoredVehicleJourney: {
                LineRef: "500-HD"</data><data>
                DirectionRef: "BBSR TO CTC"</data><data>
                VariantRef: "Normal"</data><data>
                TripImportCode: null</data><data>
                PublishedLineName: "500"</data><data>
                OperatorRef: "CTB"</data><data>
                ProductCategoryRef: ""</data><data>
                ServiceFeatureRef: ""</data><data>
                OriginRef: "11021"</data><data>
                OriginName: "BSNL Building- HD"</data><data>
                DestinationRef: "11181"</data><data>
                DestinationName: "Jubilee Circle - HD"</data><data>
                Monitored: !0</data><data>
                VehicleLocation: {
                    Longitude: 75.12884366666667</data><data>
                    Latitude: 15.356017333333334
                }</data><data>
                Occupancy: "Seats Available"</data><data>
                ApproachingDistance: "0"</data><data>
                VehicleRef: "KA-25 3044"</data><data>
                MonitoredCall: {
                    VisitNumber: "1"</data><data>
                    Order: "11"</data><data>
                    VehicleAtStop: !1</data><data>
                    StopPointName: "Unkal Lake- D"</data><data>
                    VehicleLocationV1DtoAtStop: {
                        Longitude: 75.11158</data><data>
                        Latitude: 15.38238
                    }</data><data>
                    AimedArrivalTime: "2017-12-05T13:21:43+05:30"</data><data>
                    ExpectedArrivalTime: "2017-12-05T13:21:49+05:30"</data><data>
                    AimedDepartureTime: "2017-12-05T13:21:54+05:30"</data><data>
                    ExpectedDepartureTime: "2017-12-05T13:22:00+05:30"
                }
            }
        }</data><data> {
            RecordedAtTime: "2017-12-05T13:18:12+05:30"</data><data>
            MonitoringRef: "11441"</data><data>
            MonitoredVehicleJourney: {
                LineRef: "600-HD"</data><data>
                DirectionRef: "BBSR TO CTC"</data><data>
                VariantRef: "Normal"</data><data>
                TripImportCode: null</data><data>
                PublishedLineName: "500"</data><data>
                OperatorRef: "CTB"</data><data>
                ProductCategoryRef: ""</data><data>
                ServiceFeatureRef: ""</data><data>
                OriginRef: "11021"</data><data>
                OriginName: "BSNL Building- HD"</data><data>
                DestinationRef: "11181"</data><data>
                DestinationName: "Jubilee Circle - HD"</data><data>
                Monitored: !1</data><data>
                VehicleLocation: {
                    Longitude: 75.12884366666667</data><data>
                    Latitude: 15.356017333333334
                }</data><data>
                Occupancy: "Seats Available"</data><data>
                ApproachingDistance: "0"</data><data>
                VehicleRef: "KA-25 2222"</data><data>
                MonitoredCall: {
                    VisitNumber: "1"</data><data>
                    Order: "11"</data><data>
                    VehicleAtStop: !1</data><data>
                    StopPointName: "Unkal Lake1"</data><data>
                    VehicleLocationV1DtoAtStop: {
                        Longitude: 75.11158</data><data>
                        Latitude: 15.38238
                    }</data><data>
                    AimedArrivalTime: "2017-12-05T13:21:43+05:30"</data><data>
                    ExpectedArrivalTime: "2017-12-05T13:21:49+05:30"</data><data>
                    AimedDepartureTime: "2017-12-05T13:21:54+05:30"</data><data>
                    ExpectedDepartureTime: "2017-12-05T13:22:00+05:30"
                }
            }
        }</data><data> {
            RecordedAtTime: "2017-12-05T13:18:12+05:30"</data><data>
            MonitoringRef: "11441"</data><data>
            MonitoredVehicleJourney: {
                LineRef: "600-HD"</data><data>
                DirectionRef: "BBSRTO TO BPD"</data><data>
                VariantRef: "Normal"</data><data>
                TripImportCode: null</data><data>
                PublishedLineName: "500"</data><data>
                OperatorRef: "CTB"</data><data>
                ProductCategoryRef: ""</data><data>
                ServiceFeatureRef: ""</data><data>
                OriginRef: "11021"</data><data>
                OriginName: "BSNL Building- HD"</data><data>
                DestinationRef: "11181"</data><data>
                DestinationName: "Jubilee Circle - HD"</data><data>
                Monitored: !0</data><data>
                VehicleLocation: {
                    Longitude: 75.12884366666667</data><data>
                    Latitude: 15.356017333333334
                }</data><data>
                Occupancy: "Seats Available"</data><data>
                ApproachingDistance: "0"</data><data>
                VehicleRef: "KA-25 1111"</data><data>
                MonitoredCall: {
                    VisitNumber: "1"</data><data>
                    Order: "11"</data><data>
                    VehicleAtStop: !1</data><data>
                    StopPointName: "Unkal Lake- HD"</data><data>
                    VehicleLocationV1DtoAtStop: {
                        Longitude: 75.11158</data><data>
                        Latitude: 15.38238
                    }</data><data>
                    AimedArrivalTime: "2017-12-05T13:21:43+05:30"</data><data>
                    ExpectedArrivalTime: "2017-12-05T13:21:49+05:30"</data><data>
                    AimedDepartureTime: "2017-12-05T13:21:54+05:30"</data><data>
                    ExpectedDepartureTime: "2017-12-05T13:22:00+05:30"
                }




    Object.defineProperty(d</data><data> "__esModule"</data><data> {
        value: !0
    })</data><data> d.busListForRoute = i</data><data> d.getTimeTableList = a;
    d.routeList = [{
        routeCode: "19U"</data><data>
        startName: "PATRAKARTH NAGAR"</data><data>
        endName: "CBT"</data><data>
        startTime: "10:50AM"</data><data>
        endTime: "12:50PM"</data><data>
        days: "1</data><data>3"
    }</data><data> {
        routeCode: "500D-BH"</data><data>
        startName: "BSNL Building"</data><data>
        endName: "Depot"</data><data>
        startTime: "10:50AM"</data><data>
        endtTime: "12:50PM"</data><data>
        days: "1</data><data>3"
    }</data><data> {
        routeCode: "500-HD"</data><data>
        startName: "BSNL Building"</data><data>
        endName: "Jubliee Building"</data><data>
        startTime: "10:50AM"</data><data>
        endTime: "12:50PM"</data><data>
        days: "1</data><data>3"
    }</data><data> {
        routeCode: "100D-KMCD"</data><data>
        startName: "KMC"</data><data>
        endName: "Depot"</data><data>
        startTime: "10:50AM"</data><data>
        endTime: "12:50PM"</data><data>
        days: "1</data><data>3"
    }</data><data> {
        routeCode: "100D-DCBT1"</data><data>
        startName: "Depot"</data><data>
        endName: "CBT"</data><data>
        startTime: "10:50AM"</data><data>
        endTime: "12:50PM"</data><data>
        days: "1</data><data>3"
    }</data><data> {
        routeCode: "100D-DCBT1"</data><data>
        startName: "Depot"</data><data>
        endName: "CBT"</data><data>
        startTime: "10:50AM"</data><data>
        endTime: "12:50PM"</data><data>
        days: "1</data><data>3"
    }</data><data> {
        routeCode: "100D-DCBT1"</data><data>
        startName: "Depot"</data><data>
        endName: "CBT"</data><data>
        startTime: "10:50AM"</data><data>
        endTime: "12:50PM"</data><data>
        days: "1</data><data>3"
    }</data><data> {
        routeCode: "100D-DCBT1"</data><data>
        startName: "Depot"</data><data>
        endName: "CBT"</data><data>
        startTime: "10:50AM"</data><data>
        endTime: "12:50PM"</data><data>
        days: "1</data><data>3"
    }]</data><data> d.stopList = [{
        stopName: "HDMC- DH"</data><data>
        startTime: "10:00PM"</data><data>
        endTime: "10:00PM"</data><data>
        stopLatitude: "27.1122545"</data><data>
        stopLongitude: "70.1111"
    }</data><data> {
        stopName: "RTO- DH"</data><data>
        startTime: "10:15PM"</data><data>
        endTime: "10:00PM"</data><data>
        stopLatitude: "27.1122545"</data><data>
        stopLongitude: "70.1111"
    }</data><data> {
        stopName: "1ST GATE - 1"</data><data>
        startTime: "10:30PM"</data><data>
        endTime: "10:00PM"</data><data>
        stopLatitude: "27.1122545"</data><data>
        stopLongitude: "70.1111"
    }</data><data> {
        stopName: "1ST GATE - 2"</data><data>
        startTime: "10:45PM"</data><data>
        endTime: "10:00PM"</data><data>
        stopLatitude: "27.1122545"</data><data>
        stopLongitude: "70.1111"
    }</data><data> {
        stopName: "2ND GATE - 1"</data><data>
        startTime: "11:00PM"</data><data>
        endTime: "10:00PM"</data><data>
        stopLatitude: "27.1122545"</data><data>
        stopLongitude: "70.1111"
    }</data><data> {
        stopName: "2ND GATE - 2"</data><data>
        startTime: "11:15PM"</data><data>
        endTime: "10:00PM"</data><data>
        stopLatitude: "27.1122545"</data><data>
        stopLongitude: "70.1111"
    }</data><data> {
        stopName: "2ND GATE - 3"</data><data>
        startTime: "11:30PM"</data><data>
        endTime: "10:00PM"</data><data>
        stopLatitude: "27.1122545"</data><data>
        stopLongitude: "70.1111"
    }</data><data> {
        stopName: "ABHINAYA NAGAR - 1"</data><data>
        startTime: "11:45PM"</data><data>
        endTime: "10:00PM"</data><data>
        stopLatitude: "27.1122545"</data><data>
        stopLongitude: "70.1111"
    }</data><data> {
        stopName: "ABHINAYA NAGAR - 2"</data><data>
        time: "12:00PM"</data><data>
        endTime: "10:00PM"</data><data>
        stopLatitude: "27.1122545"</data><data>
        stopLongitude: "70.1111"
    }</data><data> {
        stopName: "ADDHYAPARK NAGAR - 1"</data><data>
        time: "12:15PM"</data><data>
        endTime: "10:00PM"</data><data>
        stopLatitude: "27.1122545"</data><data>
        stopLongitude: "70.1111"
    }</data><data> {
        stopName: "ADDHYAPARK NAGAR - 2"</data><data>
        time: "12:30PM"</data><data>
        endTime: "10:00PM"</data><data>
        stopLatitude: "27.1122545"</data><data>
        stopLongitude: "70.1111"



    e.contactList = [{
        id: "1"</data><data>
        contact_person_name: "Control Room"</data><data>
        contact_person_number: "100"</data><data>
        emergency_contact_type: "1"</data><data>
        contact_icon: t(490)
    }</data><data> {
        id: "2"</data><data>
        contact_person_name: "Police Station"</data><data>
        contact_person_number: "0836-2233443"</data><data>
        emergency_contact_type: "3"</data><data>
        contact_icon: t(491)
    }</data><data> {
        id: "3"</data><data>
        contact_person_name: "Traffic Control Center"</data><data>
        contact_person_number: "103"</data><data>
        emergency_contact_type: "3"</data><data>
        contact_icon: t(492)
    }]


    t.exports = e(154).registerAsset({
        __packager_asset: !0</data><data>
        httpServerLocation: "/assets/src/imgs"</data><data>
        width: 64</data><data>
        height: 64</data><data>
        scales: [1]</data><data>
        hash: "596a7409a42f8c4f4889cc7b1640fcc7"</data><data>
        name: "controlroom"</data><data>
        type: "png"
    })
}</data><data> 490);
__d(function(e</data><data> s</data><data> t</data><data> a) {
    t.exports = s(154).registerAsset({
        __packager_asset: !0</data><data>
        httpServerLocation: "/assets/src/imgs"</data><data>
        width: 64</data><data>
        height: 64</data><data>
        scales: [1]</data><data>
        hash: "8d88071712422186c75fe17b01724bdb"</data><data>
        name: "policestation"</data><data>
        type: "png"
    })
}</data><data> 491);
__d(function(e</data><data> s</data><data> t</data><data> a) {
    t.exports = s(154).registerAsset({
        __packager_asset: !0</data><data>
        httpServerLocation: "/assets/src/imgs"</data><data>
        width: 64</data><data>
        height: 64</data><data>
        scales: [1]</data><data>
        hash: "2de143a9338de2850022ceb0451a4cec"</data><data>
        name: "trafficcontrol"</data><data>
        type: "png"
    })



    Object.defineProperty(i</data><data> "__esModule"</data><data> {
        value: !0
    })</data><data> i.placesList = void 0</data><data> i.getAttractions = o;
    a(12)</data><data> i.placesList = [{
        id: "1"</data><data>
        place_name: "Unakal Lake"</data><data>
        place_imageUrl: "https://www.nativeplanet.com/img/2015/08/25-1440495464-unkallakee.jpg"</data><data>
        place_imageUrl2: "http://image3.mouthshut.com/images/Restaurant/Photo/-92011_10198.jpg"</data><data>
        place_imageUrl3: "http://farm2.static.flickr.com/1360/1136702080_a2e39ca81a.jpg"</data><data>
        place_description: "Unkal lake is beautiful water spot in Hubli & is about 110 years old. This lake is spread across 200 acres of land. Centre of the lake is situated the statue of Swami Vivekananda which is the prime attraction of the lake. It has recreational facilities for children. You can enjoy a boat ride here. The Unkal lake </data><data> however</data><data> is large enough to accommodate all visitors as well as the hawkers. Hotel Naveen</data><data>the star attraction in Hubli is just beside this spot. It is the source of drinking water to a portion of Hubli"
    }</data><data> {
        id: "2"</data><data>
        place_name: "Shri Siddharoodha Swamy Math"</data><data>
        place_imageUrl: "https://trabol.s3.amazonaws.com/images/8922/dattatreyatemple1.jpg"</data><data>
        place_imageUrl2: "https://i.ytimg.com/vi/BaXfhtiIQ14/maxresdefault.jpg"</data><data>
        place_imageUrl3: "https://mw2.google.com/mw-panoramio/photos/medium/60769251.jpg"</data><data>
        place_description: "A truly and largely worshiped Swami Shri Siddharoodha. many people come here as devotees and everyone feels blessed. Can easily stay for 30 to 60 minutes and one should visit atleast once a week"
    }</data><data> {
        id: "3"</data><data>
        place_name: "Nrupatunga Betta"</data><data>
        place_imageUrl: "https://media-cdn.tripadvisor.com/media/photo-s/0b/22/d3/7d/nrupatunga-betta.jpg"</data><data>
        place_imageUrl2: "https://upload.wikimedia.org/wikipedia/commons/1/17/Pandavlene.jpg"</data><data>
        place_imageUrl3: "https://media-cdn.tripadvisor.com/media/photo-s/05/0e/20/a7/saptashrungi.jpg"</data><data>
        place_description: "Nrupatunga Betta is yet another famous tourist spot in Hubli. It is a small hill that has been developed into a beautiful picnic spot for the people of Hubli and Dharwad. It offers a great respite from the hustle and bustle of the city and serves as an ideal place to spend time with your near and dear ones in summers as well"
    }</data><data> {
        id: "4"</data><data>
        place_name: "Indira Gandhi Glass House"</data><data>
        place_imageUrl: "http://im.hunt.in/cg/hubli/City-Guide/Tourist_spots_in_Hubli.jpg"</data><data>
        place_imageUrl2: "http://c14996364.r60.cf2.rackcdn.com/destinations/glass-house-garden-7257/Glass-House-Garden-(4)_slider_main.jpg?1384978808"</data><data>
        place_imageUrl3: "http://image3.mouthshut.com/images/imagesp/925753476s.jpg"</data><data>
        place_description: "Indira Gandhi Glass House Garden is a public garden with recreational amenities maintained by city municipality. It houses a large glass building resembling a similar structure in Lalbagh of Bengaluru. \n Indira Glass House is renovated into more beautiful park. The entry fee of Rs.10/- for elders and Rs.5/- for children is collected. But when you go on walking all around</data><data>it feels its more worthy. There is a small train to get on and behold the park. The most beautiful thing to be watched is the musical fountain that is arranged every weekend (Saturday and Sunday) and on Governmental Holidays without any extra charge."
    }</data><data> {
        id: "5"</data><data>
        place_name: "Chandramouleshwara Temple"</data><data>
        place_imageUrl: "http://img1.holidayiq.com/images/attractions/Chandramouleshwara_Temple_Hubli_13193.jpg"</data><data>
        place_imageUrl2: "https://upload.wikimedia.org/wikipedia/commons/b/bc/Ravana_Phadi_cave_at_Aihole.jpg"</data><data>
        place_imageUrl3: "http://www.visittnt.com/blog/wp-content/uploads/2017/09/Badami-Cave-Temple.jpg"</data><data>
        place_description: "Chandramouleshwar is a 900-year-old temple from the Badami Chalukyan era.[1] It was built on the lines of Badami</data><data> Aihole and Pattadakal temples</data><data> is a Monument of National Importance</data><data> and is designated as a Protected Monument under the Ancient Monuments and Archaeological Sites (Act (1958)) by Archaeological Survey of India (ASI).\n There is an urgent need of conservation and restoration of the Chandramouleshwar temple at Unkal.[10][11]The temple premises serve as a playground for children and youngsters to play cricket. It has become a victim of government apathy and urbanization. There is virtually no approach road to and encroachments on all the four sides of the temple. The roads leading to the temple are very small with arrack shops and other illegal trades. One has to cross rows of houses and narrow lanes to reach Chandramauleshwar temple.Archaeological Survey of India (ASI) has begun work very long back</data><data> started work on a compound wall to prevent further encroachments</data><data> but the work is half done."
    }]




    o.etaStopDetailsList = [{
        locName: "RTO- DH"
    }</data><data> {
        locName: "1ST GATE - 1"
    }</data><data> {
        locName: "1ST GATE - 2"
    }</data><data> {
        locName: "2ND GATE - 1"
    }</data><data> {
        locName: "2ND GATE - 2"
    }</data><data> {
        locName: "2ND GATE - 3"
    }</data><data> {
        locName: "ABHINAYA NAGAR - 1"
    }</data><data> {
        locName: "ABHINAYA NAGAR - 2"
    }</data><data> {
        locName: "ADDHYAPARK NAGAR - 1"
    }</data><data> {
        locName: "ADDHYAPARK NAGAR - 2"
    }</data><data> {
        locName: "AIRPORT - 1"
    }</data><data> {
        locName: "AIRPORT - 2"
    }]</data><data> o.routeDetails = [{
        busNo: "100D-DKMC"</data><data>
        startplace: "DEPOT"</data><data>
        starttime: "12:00PM"</data><data>
        endplace: "KMC"</data><data>
        endtime: "03:00PM"
    }</data><data> {
        busNo: "100D-CBT"</data><data>
        startplace: "CBT"</data><data>
        starttime: "10:50AM"</data><data>
        endplace: "DEPOT"</data><data>
        endtime: "12:50PM"
    }</data><data> {
        busNo: "100D-CBT1D"</data><data>
        startplace: "PATRAKARTH NAGAR"</data><data>
        starttime: "10:50AM"</data><data>
        endplace: "CBT"</data><data>
        endtime: "12:50PM"
    }</data><data> {
        busNo: "500D-HB"</data><data>
        startplace: "PATRAKARTH NAGAR"</data><data>
        starttime: "10:50AM"</data><data>
        endplace: "CBT"</data><data>
        endtime: "12:50PM"
    }</data><data> {
        busNo: "11D"</data><data>
        startplace: "PATRAKARTH NAGAR"</data><data>
        starttime: "10:50AM"</data><data>
        endplace: "CBT"</data><data>
        endtime: "12:50PM"
    }</data><data> {
        busNo: "100D-DKMC"</data><data>
        startplace: "PATRAKARTH NAGAR"</data><data>
        starttime: "10:50AM"</data><data>
        endplace: "CBT"</data><data>
        endtime: "12:50PM"
    }</data><data> {
        busNo: "100D-CBT1D"</data><data>
        startplace: "PATRAKARTH NAGAR"</data><data>
        starttime: "10:50AM"</data><data>
        endplace: "CBT"</data><data>
        endtime: "12:50PM"
    }</data><data> {
        busNo: "500D-HB"</data><data>
        startplace: "PATRAKARTH NAGAR"</data><data>
        starttime: "10:50AM"</data><data>
        endplace: "CBT"</data><data>
        endtime: "12:50PM"
    }</data><data> {
        busNo: "11D"</data><data>
        startplace: "PATRAKARTH NAGAR"</data><data>
        starttime: "10:50AM"</data><data>
        endplace: "CBT"</data><data>
        endtime: "12:50PM"
    }</data><data> {
        busNo: "100D-DKMC"</data><data>
        startplace: "PATRAKARTH NAGAR"</data><data>
        starttime: "10:50AM"</data><data>
        endplace: "CBT"</data><data>
        endtime: "12:50PM"
    }</data><data> {
        busNo: "500D-HB"</data><data>
        startplace: "PATRAKARTH NAGAR"</data><data>
        starttime: "10:50AM"</data><data>
        endplace: "CBT"</data><data>
        endtime: "12:50PM"
    }</data><data> {
        busNo: "11D"</data><data>
        startplace: "PATRAKARTH NAGAR"</data><data>
        starttime: "10:50AM"</data><data>
        endplace: "CBT"</data><data>
        endtime: "12:50PM"
    }</data><data> {
        busNo: "100D-DKMC"</data><data>
        startplace: "PATRAKARTH NAGAR"</data><data>
        starttime: "10:50AM"</data><data>
        endplace: "CBT"</data><data>
        endtime: "12:50PM"
    }</data><data> {
        busNo: "100D-CBT1D"</data><data>
        startplace: "PATRAKARTH NAGAR"</data><data>
        starttime: "10:50AM"</data><data>
        endplace: "CBT"</data><data>
        endtime: "12:50PM"
    }</data><data> {
        busNo: "500D-HB"</data><data>
        startplace: "PATRAKARTH NAGAR"</data><data>
        starttime: "10:50AM"</data><data>
        endplace: "CBT"</data><data>
        endtime: "12:50PM"
    }</data><data> {
        busNo: "11D"</data><data>
        startplace: "PATRAKARTH NAGAR"</data><data>
        starttime: "10:50AM"</data><data>
        endplace: "CBT"</data><data>
        endtime: "12:50PM"
    }</data><data> {
        busNo: "100D-DKMC"</data><data>
        startplace: "PATRAKARTH NAGAR"</data><data>
        starttime: "10:50AM"</data><data>
        endplace: "CBT"</data><data>
        endtime: "12:50PM"
    }]</data><data> o.busStopDetails = [{
        busNo: "2341"</data><data>
        stopName: "HDMC- DH"</data><data>
        eta: "10:00AM"</data><data>
        etd: "10:05PM"
    }</data><data> {
        busNo: "2342"</data><data>
        stopName: "RTO- DH"</data><data>
        eta: "10:15AM"</data><data>
        etd: "10:20PM"
    }</data><data> {
        busNo: "2343"</data><data>
        stopName: "1ST GATE - 1"</data><data>
        eta: "10:30AM"</data><data>
        etd: "10:35PM"
    }</data><data> {
        busNo: "2344"</data><data>
        stopName: "1ST GATE - 2"</data><data>
        eta: "10:50AM"</data><data>
        etd: "10:55PM"
    }</data><data> {
        busNo: "2345"</data><data>
        stopName: "2ND GATE - 1"</data><data>
        eta: "11:05AM"</data><data>
        etd: "11:10PM"
    }</data><data> {
        busNo: "2346"</data><data>
        stopName: "2ND GATE - 2"</data><data>
        eta: "11:15AM"</data><data>
        etd: "11:20PM"
    }</data><data> {
        busNo: "2347"</data><data>
        stopName: "2ND GATE - 3"</data><data>
        eta: "11:30AM"</data><data>
        etd: "11:35PM"
    }</data><data> {
        busNo: "2348"</data><data>
        stopName: "ABHINAYA NAGAR - 1"</data><data>
        eta: "11:50AM"</data><data>
        etd: "11:55PM"
    }</data><data> {
        busNo: "2349"</data><data>
        stopName: "ABHINAYA NAGAR - 2"</data><data>
        eta: "12:05AM"</data><data>
        etd: "12:07PM"
    }</data><data> {
        busNo: "2366"</data><data>
        stopName: "ADDHYAPARK NAGAR - 1"</data><data>
        eta: "12:15AM"</data><data>
        etd: "12:18PM"
    }</data><data> {
        busNo: "2355"</data><data>
        stopName: "ADDHYAPARK NAGAR - 2"</data><data>
        eta: "12:30AM"</data><data>
        etd: "12:35PM"
    }</data><data> {
        busNo: "2333"</data><data>
        stopName: "AIRPORT - 1"</data><data>
        eta: "12:45AM"</data><data>
        etd: "12:47PM"
    }]</data><data> o.MonitoredVehicleJourney = {
        ResponseTimestamp: "2017-12-05T13:18:12+05:30"</data><data>
        ValidUntil: "2017-12-05T13:20:12+05:30"</data><data>
        MonitoredStopVisit: [{
            RecordedAtTime: "2017-12-05T13:18:12+05:30"</data><data>
            MonitoringRef: "11441"</data><data>
            MonitoredVehicleJourney: {
                LineRef: "700-HD"</data><data>
                DirectionRef: "BSNL Building TO Jubilee Circle"</data><data>
                VariantRef: "Normal"</data><data>
                TripImportCode: null</data><data>
                PublishedLineName: "500"</data><data>
                OperatorRef: "CTB"</data><data>
                ProductCategoryRef: ""</data><data>
                ServiceFeatureRef: ""</data><data>
                OriginRef: "11021"</data><data>
                OriginName: "BSNL Building- HD"</data><data>
                DestinationRef: "11181"</data><data>
                DestinationName: "Jubilee Circle - HD"</data><data>
                Monitored: !0</data><data>
                VehicleLocation: {
                    Longitude: 75.12884366666667</data><data>
                    Latitude: 15.356017333333334
                }</data><data>
                Occupancy: "Seats Available"</data><data>
                ApproachingDistance: "0"</data><data>
                VehicleRef: "KA-25 3542"</data><data>
                MonitoredCall: {
                    VisitNumber: "1"</data><data>
                    Order: "11"</data><data>
                    VehicleAtStop: !1</data><data>
                    StopPointName: "Unkal Lake- HD"</data><data>
                    VehicleLocationV1DtoAtStop: {
                        Longitude: 75.11158</data><data>
                        Latitude: 15.38238
                    }</data><data>
                    AimedArrivalTime: "2017-12-05T13:21:43+05:30"</data><data>
                    ExpectedArrivalTime: "2017-12-05T13:21:49+05:30"</data><data>
                    AimedDepartureTime: "2017-12-05T13:21:54+05:30"</data><data>
                    ExpectedDepartureTime: "2017-12-05T13:22:00+05:30"
                }
            }
        }</data><data> {
            RecordedAtTime: "2017-12-05T13:18:12+05:30"</data><data>
            MonitoringRef: "11441"</data><data>
            MonitoredVehicleJourney: {
                LineRef: "500-HD"</data><data>
                DirectionRef: "BSNL Building TO Jubilee Circle"</data><data>
                VariantRef: "Normal"</data><data>
                TripImportCode: null</data><data>
                PublishedLineName: "500"</data><data>
                OperatorRef: "CTB"</data><data>
                ProductCategoryRef: ""</data><data>
                ServiceFeatureRef: ""</data><data>
                OriginRef: "11021"</data><data>
                OriginName: "BSNL Building- HD"</data><data>
                DestinationRef: "11181"</data><data>
                DestinationName: "Jubilee Circle - HD"</data><data>
                Monitored: !0</data><data>
                VehicleLocation: {
                    Longitude: 75.12884366666667</data><data>
                    Latitude: 15.356017333333334
                }</data><data>
                Occupancy: "Seats Available"</data><data>
                ApproachingDistance: "0"</data><data>
                VehicleRef: "KA-25 2453"</data><data>
                MonitoredCall: {
                    VisitNumber: "1"</data><data>
                    Order: "11"</data><data>
                    VehicleAtStop: !1</data><data>
                    StopPointName: "Unkal Lake- HD"</data><data>
                    VehicleLocationV1DtoAtStop: {
                        Longitude: 75.11158</data><data>
                        Latitude: 15.38238
                    }</data><data>
                    AimedArrivalTime: "2017-12-05T13:21:43+05:30"</data><data>
                    ExpectedArrivalTime: "2017-12-05T13:21:49+05:30"</data><data>
                    AimedDepartureTime: "2017-12-05T13:21:54+05:30"</data><data>
                    ExpectedDepartureTime: "2017-12-05T13:22:00+05:30"
                }
            }
        }</data><data> {
            RecordedAtTime: "2017-12-05T13:18:12+05:30"</data><data>
            MonitoringRef: "11441"</data><data>
            MonitoredVehicleJourney: {
                LineRef: "500-HD"</data><data>
                DirectionRef: "BSNL Building TO Jubilee Circle"</data><data>
                VariantRef: "Normal"</data><data>
                TripImportCode: null</data><data>
                PublishedLineName: "500"</data><data>
                OperatorRef: "CTB"</data><data>
                ProductCategoryRef: ""</data><data>
                ServiceFeatureRef: ""</data><data>
                OriginRef: "11021"</data><data>
                OriginName: "BSNL Building- HD"</data><data>
                DestinationRef: "11181"</data><data>
                DestinationName: "Jubilee Circle - HD"</data><data>
                Monitored: !0</data><data>
                VehicleLocation: {
                    Longitude: 75.12884366666667</data><data>
                    Latitude: 15.356017333333334
                }</data><data>
                Occupancy: "Seats Available"</data><data>
                ApproachingDistance: "0"</data><data>
                VehicleRef: "KA-25 1425"</data><data>
                MonitoredCall: {
                    VisitNumber: "1"</data><data>
                    Order: "11"</data><data>
                    VehicleAtStop: !1</data><data>
                    StopPointName: "Unkal Lake- HD"</data><data>
                    VehicleLocationV1DtoAtStop: {
                        Longitude: 75.11158</data><data>
                        Latitude: 15.38238
                    }</data><data>
                    AimedArrivalTime: "2017-12-05T13:21:43+05:30"</data><data>
                    ExpectedArrivalTime: "2017-12-05T13:21:49+05:30"</data><data>
                    AimedDepartureTime: "2017-12-05T13:21:54+05:30"</data><data>
                    ExpectedDepartureTime: "2017-12-05T13:22:00+05:30"
                }
            }
        }</data><data> {
            RecordedAtTime: "2017-12-05T13:18:12+05:30"</data><data>
            MonitoringRef: "11441"</data><data>
            MonitoredVehicleJourney: {
                LineRef: "500-HD"</data><data>
                DirectionRef: "BBSR TO CTC"</data><data>
                VariantRef: "Normal"</data><data>
                TripImportCode: null</data><data>
                PublishedLineName: "500"</data><data>
                OperatorRef: "CTB"</data><data>
                ProductCategoryRef: ""</data><data>
                ServiceFeatureRef: ""</data><data>
                OriginRef: "11021"</data><data>
                OriginName: "BSNL Building- HD"</data><data>
                DestinationRef: "11181"</data><data>
                DestinationName: "Jubilee Circle - HD"</data><data>
                Monitored: !0</data><data>
                VehicleLocation: {
                    Longitude: 75.12884366666667</data><data>
                    Latitude: 15.356017333333334
                }</data><data>
                Occupancy: "Seats Available"</data><data>
                ApproachingDistance: "0"</data><data>
                VehicleRef: "KA-25 3044"</data><data>
                MonitoredCall: {
                    VisitNumber: "1"</data><data>
                    Order: "11"</data><data>
                    VehicleAtStop: !1</data><data>
                    StopPointName: "Unkal Lake- HD"</data><data>
                    VehicleLocationV1DtoAtStop: {
                        Longitude: 75.11158</data><data>
                        Latitude: 15.38238
                    }</data><data>
                    AimedArrivalTime: "2017-12-05T13:21:43+05:30"</data><data>
                    ExpectedArrivalTime: "2017-12-05T13:21:49+05:30"</data><data>
                    AimedDepartureTime: "2017-12-05T13:21:54+05:30"</data><data>
                    ExpectedDepartureTime: "2017-12-05T13:22:00+05:30"
                }
            }
        }</data><data> {
            RecordedAtTime: "2017-12-05T13:18:12+05:30"</data><data>
            MonitoringRef: "11441"</data><data>
            MonitoredVehicleJourney: {
                LineRef: "600-HD"</data><data>
                DirectionRef: "BBSR TO CTC"</data><data>
                VariantRef: "Normal"</data><data>
                TripImportCode: null</data><data>
                PublishedLineName: "500"</data><data>
                OperatorRef: "CTB"</data><data>
                ProductCategoryRef: ""</data><data>
                ServiceFeatureRef: ""</data><data>
                OriginRef: "11021"</data><data>
                OriginName: "BSNL Building- HD"</data><data>
                DestinationRef: "11181"</data><data>
                DestinationName: "Jubilee Circle - HD"</data><data>
                Monitored: !1</data><data>
                VehicleLocation: {
                    Longitude: 75.12884366666667</data><data>
                    Latitude: 15.356017333333334
                }</data><data>
                Occupancy: "Seats Available"</data><data>
                ApproachingDistance: "0"</data><data>
                VehicleRef: "KA-25 2222"</data><data>
                MonitoredCall: {
                    VisitNumber: "1"</data><data>
                    Order: "11"</data><data>
                    VehicleAtStop: !1</data><data>
                    StopPointName: "Unkal Lake- HD"</data><data>
                    VehicleLocationV1DtoAtStop: {
                        Longitude: 75.11158</data><data>
                        Latitude: 15.38238
                    }</data><data>
                    AimedArrivalTime: "2017-12-05T13:21:43+05:30"</data><data>
                    ExpectedArrivalTime: "2017-12-05T13:21:49+05:30"</data><data>
                    AimedDepartureTime: "2017-12-05T13:21:54+05:30"</data><data>
                    ExpectedDepartureTime: "2017-12-05T13:22:00+05:30"
                }
            }
        }</data><data> {
            RecordedAtTime: "2017-12-05T13:18:12+05:30"</data><data>
            MonitoringRef: "11441"</data><data>
            MonitoredVehicleJourney: {
                LineRef: "600-HD"</data><data>
                DirectionRef: "BBSRTO TO BPD"</data><data>
                VariantRef: "Normal"</data><data>
                TripImportCode: null</data><data>
                PublishedLineName: "500"</data><data>
                OperatorRef: "CTB"</data><data>
                ProductCategoryRef: ""</data><data>
                ServiceFeatureRef: ""</data><data>
                OriginRef: "11021"</data><data>
                OriginName: "BSNL Building- HD"</data><data>
                DestinationRef: "11181"</data><data>
                DestinationName: "Jubilee Circle - HD"</data><data>
                Monitored: !0</data><data>
                VehicleLocation: {
                    Longitude: 75.12884366666667</data><data>
                    Latitude: 15.356017333333334
                }</data><data>
                Occupancy: "Seats Available"</data><data>
                ApproachingDistance: "0"</data><data>
                VehicleRef: "KA-25 1111"</data><data>
                MonitoredCall: {
                    VisitNumber: "1"</data><data>
                    Order: "11"</data><data>
                    VehicleAtStop: !1</data><data>
                    StopPointName: "Unkal Lake- HD"</data><data>
                    VehicleLocationV1DtoAtStop: {
                        Longitude: 75.11158</data><data>
                        Latitude: 15.38238
                    }</data><data>
                    AimedArrivalTime: "2017-12-05T13:21:43+05:30"</data><data>
                    ExpectedArrivalTime: "2017-12-05T13:21:49+05:30"</data><data>
                    AimedDepartureTime: "2017-12-05T13:21:54+05:30"</data><data>
                    ExpectedDepartureTime: "2017-12-05T13:22:00+05:30"
                }
            }


                        return e({
                            type: a.FETCHING_DATA
                        })</data><data> r.prev = 2</data><data> n = {
                            grant_type: "password"</data><data>
                            username: "c3e27998-d5c2-11e7-8ddd-00ff561026b1"
                        }</data><data> r.next = 6</data><data> u.awrap(c.default.post("token"</data><data> n));




    r.updatesList = [{
        id: "1"</data><data>
        updateWarning: "Routes 13</data><data>22 and 23 travelling towards Mairangi are now using Stop H at Lambton Quay from Saturday 7 January 2017"</data><data>
        update: "From Saturday 7 January Routes 13</data><data>22 and 23 travelling towards Mairangi will now be using Stop H (5014 at Lambton Quay North)"
    }</data><data> {
        id: "2"</data><data>
        updateWarning: "Routes 13</data><data>22 and 23 travelling towards Mairangi are now using Stop H at Lambton Quay from Saturday 7 January 2017"</data><data>
        update: "From Saturday 7 January Routes 13</data><data>22 and 23 travelling towards Mairangi will now be using Stop H (5014 at Lambton Quay North)"
    }</data><data> {
        id: "3"</data><data>
        updateWarning: "Routes 13</data><data>22 and 23 travelling towards Mairangi are now using Stop H at Lambton Quay from Saturday 7 January 2017"</data><data>
        update: "From Saturday 7 January Routes 13</data><data>22 and 23 travelling towards Mairangi will now be using Stop H (5014 at Lambton Quay North)"
    }</data><data> {
        id: "4"</data><data>
        updateWarning: "Routes 13</data><data>22 and 23 travelling towards Mairangi are now using Stop H at Lambton Quay from Saturday 7 January 2017"</data><data>
        update: "From Saturday 7 January Routes 13</data><data>22 and 23 travelling towards Mairangi will now be using Stop H (5014 at Lambton Quay North)"
    }</data><data> {
        id: "5"</data><data>
        updateWarning: "Routes 13</data><data>22 and 23 travelling towards Mairangi are now using Stop H at Lambton Quay from Saturday 7 January 2017"</data><data>
        update: "From Saturday 7 January Routes 13</data><data>22 and 23 travelling towards Mairangi will now be using Stop H (5014 at Lambton Quay North)"
    }</data><data> {
        id: "6"</data><data>
        updateWarning: "Routes 13</data><data>22 and 23 travelling towards Mairangi are now using Stop H at Lambton Quay from Saturday 7 January 2017"</data><data>
        update: "From Saturday 7 January Routes 13</data><data>22 and 23 travelling towards Mairangi will now be using Stop H (5014 at Lambton Quay North)"
    }</data><data> {
        id: "7"</data><data>
        updateWarning: "Routes 13</data><data>22 and 23 travelling towards Mairangi are now using Stop H at Lambton Quay from Saturday 7 January 2017"</data><data>
        update: "From Saturday 7 January Routes 13</data><data>22 and 23 travelling towards Mairangi will now be using Stop H (5014 at Lambton Quay North)"
    }</data><data> {
        id: "8"</data><data>
        updateWarning: "Routes 13</data><data>22 and 23 travelling towards Mairangi are now using Stop H at Lambton Quay from Saturday 7 January 2017"</data><data>
        update: "From Saturday 7 January Routes 13</data><data>22 and 23 travelling towards Mairangi will now be using Stop H (5014 at Lambton Quay North)"
    }</data><data> {
        id: "9"</data><data>
        updateWarning: "Routes 13</data><data>22 and 23 travelling towards Mairangi are now using Stop H at Lambton Quay from Saturday 7 January 2017"</data><data>
        update: "From Saturday 7 January Routes 13</data><data>22 and 23 travelling towards Mairangi will now be using Stop H (5014 at Lambton Quay North)"
    }</data><data> {
        id: "10"</data><data>
        updateWarning: "Routes 13</data><data>22 and 23 travelling towards Mairangi are now using Stop H at Lambton Quay from Saturday 7 January 2017"</data><data>
        update: "From Saturday 7 January Routes 13</data><data>22 and 23 travelling towards Mairangi will now be using Stop H (5014 at Lambton Quay North)"
    }</data><data> {
        id: "11"</data><data>
        updateWarning: "Routes 13</data><data>22 and 23 travelling towards Mairangi are now using Stop H at Lambton Quay from Saturday 7 January 2017"</data><data>
        update: "From Saturday 7 January Routes 13</data><data>22 and 23 travelling towards Mairangi will now be using Stop H (5014 at Lambton Quay North)"
    }]



    n.plan = [{
        0: [{
            startName: "1ST GATE - 1"</data><data>
            endName: "ADDHYAPARK NAGAR - 1"</data><data>
            routeName: "BSNL Building to Jubilee Circle"</data><data>
            routeCode: "19U"</data><data>
            distance: "10"</data><data>
            mode: "Bus/Walk"</data><data>
            vehicleRef: "KA-25 3044"</data><data>
            duration: "30"</data><data>
            startPointEta: "2017-12-27T11:29:25+05:30"</data><data>
            startPointEtd: "2017-12-27T11:29:25+05:30"</data><data>
            endPointEta: "2017-12-27T11:29:25+05:30"</data><data>
            endPointEtd: "2017-12-27T11:29:25+05:30"</data><data>
            startPosition: {
                stopLatitude: "15.34433"</data><data>
                stopLongitude: "75.145181"
            }</data><data>
            endPosition: {
                stopLatitude: "15.350513999353874"</data><data>
                stopLongitude: "75.13609886169434"
            }
        }</data><data> {
            startName: "1ST GATE - 1"</data><data>
            endName: "ADDHYAPARK NAGAR - 1"</data><data>
            routeName: "BSNL Building to Jubilee Circle"</data><data>
            routeCode: "19U"</data><data>
            distance: "10"</data><data>
            mode: "Bus/Walk"</data><data>
            vehicleRef: "KA-25 3044"</data><data>
            duration: "30"</data><data>
            startPointEta: "2017-12-27T11:29:25+05:30"</data><data>
            startPointEtd: "2017-12-27T11:29:25+05:30"</data><data>
            endPointEta: "2017-12-27T11:29:25+05:30"</data><data>
            endPointEtd: "2017-12-27T11:29:25+05:30"</data><data>
            startPosition: {
                stopLatitude: "15.34433"</data><data>
                stopLongitude: "75.145181"
            }</data><data>
            endPosition: {
                stopLatitude: "15.350513999353874"</data><data>
                stopLongitude: "75.13609886169434"
            }
        }]
    }</data><data> {
        0: [{
            startName: "1ST GATE - 1"</data><data>
            endName: "ADDHYAPARK NAGAR - 1"</data><data>
            routeName: "BSNL Building to Jubilee Circle"</data><data>
            routeCode: "19U"</data><data>
            distance: "10"</data><data>
            mode: "Bus/Walk"</data><data>
            vehicleRef: "KA-25 3044"</data><data>
            duration: "30"</data><data>
            startPointEta: "2017-12-27T11:29:25+05:30"</data><data>
            startPointEtd: "2017-12-27T11:29:25+05:30"</data><data>
            endPointEta: "2017-12-27T11:29:25+05:30"</data><data>
            endPointEtd: "2017-12-27T11:29:25+05:30"</data><data>
            startPosition: {
                stopLatitude: "15.34433"</data><data>
                stopLongitude: "75.145181"
            }</data><data>
            endPosition: {
                stopLatitude: "15.350513999353874"</data><data>
                stopLongitude: "75.13609886169434"
            }
        }</data><data> {
            startName: "1ST GATE - 1"</data><data>
            endName: "ADDHYAPARK NAGAR - 1"</data><data>
            routeName: "BSNL Building to Jubilee Circle"</data><data>
            routeCode: "19U"</data><data>
            distance: "10"</data><data>
            mode: "Bus/Walk"</data><data>
            vehicleRef: "KA-25 3044"</data><data>
            duration: "30"</data><data>
            startPointEta: "2017-12-27T11:29:25+05:30"</data><data>
            startPointEtd: "2017-12-27T11:29:25+05:30"</data><data>
            endPointEta: "2017-12-27T11:29:25+05:30"</data><data>
            endPointEtd: "2017-12-27T11:29:25+05:30"</data><data>
            startPosition: {
                stopLatitude: "15.34433"</data><data>
                stopLongitude: "75.145181"
            }</data><data>
            endPosition: {
                stopLatitude: "15.350513999353874"</data><data>
                stopLongitude: "75.13609886169434"
            }



    function f(r) {
        var t = [{
            from: "1ST GATE -1"</data><data>
            to: "CBT-1"</data><data>
            time: "10.30"</data><data>
            fare: "20"
        }</data><data> {
            from: "1ST GATE -2"</data><data>
            to: "AMBEDKARNAGAR -2"</data><data>
            time: "11.00"</data><data>
            fare: "30"
        }</data><data> {
            from: "ARTS COLLEGE - 1"</data><data>
            to: "AYYAPA SWAMY TEMPLE"</data><data>
            time: "11.45"</data><data>
            fare: "40"
        }</data><data> {
            from: "CBT-2"</data><data>
            to: "BANKAPUR CHOWK - 1"</data><data>
            time: "12.10"</data><data>
            fare: "20"
        }</data><data> {
            from: "BASAVESWAR CIRCLE -3"</data><data>
            to: "AIRPORT -1"</data><data>
            time: "02.30"</data><data>
            fare: "60"
        }];
        return t
    }








        _requiredBy: ["/"]</data><data>
        _resolved: "https://registry.npmjs.org/react-native/-/react-native-0.49.3.tgz"</data><data>
        _spec: "0.49.3"</data><data>
        _where: "/home/bipt012/Desktop/Hubli App/Hubli/Mobile/SourceCode/v1/Hubli"</data><data>
        bin: {
            "react-native": "local-cli/wrong-react-native.js"
        }</data><data>
        bugs: {
            url: "https://github.com/facebook/react-native/issues"
        }</data><data>




    a.exports = [{
        routeNo: "19U"</data><data>
        startPlace: "PATRAKARTH NAGAR"</data><data>
        startTime: "10:50AM"</data><data>
        endPlace: "CBT"</data><data>
        endTime: "12:50PM"
    }</data><data> {
        routeNo: "500D-BH"</data><data>
        startPlace: "BSNL Building"</data><data>
        startTime: "10:50AM"</data><data>
        endPlace: "Depot"</data><data>
        endtTime: "12:50PM"
    }</data><data> {
        routeNo: "500-HD"</data><data>
        startPlace: "BSNL Building"</data><data>
        startTime: "10:50AM"</data><data>
        endPlace: "Jubliee Building"</data><data>
        endTime: "12:50PM"
    }</data><data> {
        routeNo: "100D-KMCD"</data><data>
        startPlace: "KMC"</data><data>
        startTime: "10:50AM"</data><data>
        endPlace: "Depot"</data><data>
        endTime: "12:50PM"
    }</data><data> {
        routeNo: "100D-DCBT1"</data><data>
        startPlace: "Depot"</data><data>
        startTime: "10:50AM"</data><data>
        endPlace: "CBT"</data><data>
        endTime: "12:50PM"
    }</data><data> {
        routeNo: "500-DH"</data><data>
        startPlace: "Jubliee Circle"</data><data>
        startTime: "10:50AM"</data><data>
        endPlace: "BSNL Building"</data><data>
        endTime: "12:50PM"
    }</data><data> {
        routeNo: "19D"</data><data>
        startPlace: "CBT"</data><data>
        startTime: "10:50AM"</data><data>
        endPlace: "PATRAKARTH NAGAR"</data><data>
        endTime: "12:50PM"
    }</data><data> {
        routeNo: "11U"</data><data>
        startPlace: "GABBUR"</data><data>
        startTime: "10:50AM"</data><data>
        endPlace: "KMC"</data><data>
        endTime: "12:50PM"
    }</data><data> {
        routeNo: "100D-DKMC"</data><data>
        startPlace: "Depot"</data><data>
        startTime: "10:50AM"</data><data>
        endPlace: "KMC"</data><data>
        endTime: "12:50PM"
    }</data><data> {
        routeNo: "100D-CBT1D"</data><data>
        startPlace: "CBT"</data><data>
        startTime: "10:50AM"</data><data>
        endPlace: "Depot"</data><data>
        endTime: "12:50PM"
    }</data><data> {
        routeNo: "500-HB"</data><data>
        startPlace: "Depot"</data><data>
        startTime: "10:50AM"</data><data>
        endPlace: "BSNL Building"</data><data>
        endTime: "12:50PM"
    }</data><data> {
        routeNo: "11D"</data><data>
        startPlace: "KMC"</data><data>
        startTime: "10:50AM"</data><data>
        endPlace: "GABBUR"</data><data>
        endTime: "12:50PM"
    }]




                key: "renderData"</data><data>
                value: function() {
                    return datas = [{
                        name: "Home"</data><data>
                        route: "Dashboard"</data><data>
                        icon: t(1046)</data><data>
                        bg: "#C5F442"
                    }</data><data> {
                        name: "Time Table"</data><data>
                        route: "TimeTable"</data><data>
                        icon: t(1047)</data><data>
                        bg: "#C5F442"
                    }</data><data> {
                        name: "Arrival"</data><data>
                        route: "ETA"</data><data>
                        icon: t(1048)</data><data>
                        bg: "#C5F442"
                    }</data><data> {
                        name: "Departure"</data><data>
                        route: "ETD"</data><data>
                        icon: t(1049)</data><data>
                        bg: "#C5F442"
                    }</data><data> {
                        name: "Journey Planner"</data><data>
                        route: "JourneyPlanner"</data><data>
                        icon: t(1050)</data><data>
                        bg: "#477EEA"</data><data>
                        types: "8"
                    }</data><data> {
                        name: "Route Diagram"</data><data>
                        route: "RouteDiagram"</data><data>
                        icon: t(886)
                    }</data><data> {
                        name: "Stop Details"</data><data>
                        route: "StopDetails"</data><data>
                        icon: t(1051)</data><data>
                        bg: "#477EEA"</data><data>
                        types: "9"
                    }</data><data> {
                        name: "Fare Chart"</data><data>
                        route: "FareChart"</data><data>
                        icon: t(883)</data><data>
                        bg: "#DA4437"</data><data>
                        types: "4"
                    }</data><data> {
                        name: "Feedback"</data><data>
                        route: "FeedBack"</data><data>
                        icon: t(1052)</data><data>
                        bg: "#B89EF5"</data><data>
                        types: "5"
                    }</data><data> {
                        name: "Places of Attraction"</data><data>
                        route: "PlacesofAttraction"</data><data>
                        icon: t(1053)
                    }</data><data> {
                        name: "Contact"</data><data>
                        route: "Contact"</data><data>
                        icon: t(1054)
                    }</data><data> {
                        name: "SOS"</data><data>
                        route: "Sos"</data><data>
                        icon: t(1055)</data><data>
                        bg: "#3591FA"</data><data>
                        types: "2"
                    }]
                }
            }</data><data> {
                    switch (r.props.route.route) {
                        case "Dashboard":
                            c.Actions.Dashboard();
                            break;
                        case "TimeTable":
                            c.Actions.TimeTable();
                            break;
                        case "ETA":
                            c.Actions.StopSearchEta({
                                title: "Arrival"
                            });
                            break;
                        case "ETD":
                            c.Actions.StopSearchEta({
                                title: "Departure"
                            });
                            break;
                        case "JourneyPlanner":
                            c.Actions.JourneyPlanner();
                            break;
                        case "StopDetails":
                            c.Actions.StopDetails();
                            break;
                        case "Contact":
                            c.Actions.Contact();
                            break;
                        case "Updates":
                            c.Actions.Updates();
                            break;
                        case "FareChart":
                            c.Actions.FareChart();
                            break;
                        case "FeedBack":
                            c.Actions.FeedBack();
                            break;
                        case "PlacesofAttraction":
                            c.Actions.PlacesofAttraction();
                            break;
                        case "Sos":
                            r.checkSosData();
                            break;
                        case "RouteDiagram":
                            c.Actions.RouteDiagramComponent();
                            break;
